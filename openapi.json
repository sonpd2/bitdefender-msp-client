{
	"openapi": "3.0.2",
	"info": {
		"description": "Bitdefender MSP API Documentation\n\nBefore you start working with this API keep in mind the following:\n* the API is authenticated and rate limited; once you reached your daily quota, no more requests will be accepted (keep an eye for the HTTP status code 429)\n* some APIs have default values for some parameters; any request made where the defaults are used will result in overriding the previous value with the default value (e.g. if the parameter `x` has the default value `y`, then not providing the parameter `x`  will result in overriding the existing value of `x` - say `z` - with `y`)\n* For some query-string/URL parameters additional details about their validation can be found in the `Schemas` section\n",
		"version": "PRODUCTION",
		"title": "Bitdefender MSP"
	},
	"servers": [
		{
			"url": "https://msp.bitdefender.com"
		}
	],
	"tags": [
		{
			"name": "Organizations",
			"description": "Entity that manages subscribers and other organizations"
		},
		{
			"name": "Business users",
			"description": "Privileged users who manage one or many organizations"
		},
		{
			"name": "Subscribers",
			"description": "End user of Bitdefender applications, who has his subscription managed by an organization"
		},
		{
			"name": "Roles",
			"description": "Sets of permissions on MSP functionalities."
		},
		{
			"name": "Products",
			"description": "Bundles of subscriptions for Bitdefender applications, which can be assigned to subscribers."
		},
		{
			"name": "Subscriptions",
			"description": "Lists of subscriptions bundles assigned to subscribers."
		},
		{
			"name": "Keys",
			"description": "API keys used for backend to backend integration"
		},
		{
			"name": "Tasks",
			"description": "Long running operations performed for large quantities of data."
		},
		{
			"name": "Resources",
			"description": "API routes for which permissions can be granted."
		},
		{
			"name": "GDPR",
			"description": "GDPR requests"
		},
		{
			"name": "Reports",
			"description": "Usage statistics"
		},
		{
			"name": "Logs",
			"description": "Action and access information"
		},
		{
			"name": "Policies",
			"description": "Sets of rules applied to all subscribers managed by an organization."
		},
		{
			"name": "ToS Agreements",
			"description": "Accepted terms of service"
		},
		{
			"name": "Usage reports",
			"description": "Reports, containing the product usage, generated by the parent organizations"
		},
		{
			"name": "Data Events",
			"description": "API routes that allow an organization to subscribe/unsubscribe to event topics available through callback service push mechanism."
		}
	],
	"paths": {
		"/v1/dataEvents": {
			"get": {
				"tags": [
					"Data Events"
				],
				"summary": "List the subscribed topics of an organization",
				"description": "Get the subscribed topics of an organization",
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/EventTopic"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Organization callback service information not set": {
										"$ref": "#/components/examples/OrganizationCallbackServiceNotSetError"
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"Data Events"
				],
				"summary": "Unsubscribe to all topics",
				"description": "Unsubscribe to all topics of the organization",
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Organization callback service information not set": {
										"$ref": "#/components/examples/OrganizationCallbackServiceNotSetError"
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"post": {
				"tags": [
					"Data Events"
				],
				"summary": "Subscribe to a list of topics",
				"description": "Subscribe to all topics in the request body. \n\nSubscription to `device-created`, `device-changed` and `device-removed` events is performed only for organization with `Install Statistics` feature, and `threats-detected` event for those with `Threats` feature enabled.\n",
				"requestBody": {
					"description": "The topics the organization should subscribe to",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"topics": {
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/EventTopic"
										}
									}
								},
								"required": [
									"topics"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Organization callback service information not set": {
										"$ref": "#/components/examples/OrganizationCallbackServiceNotSetError"
									},
									"Device topics allowed only for organization with install statistics": {
										"$ref": "#/components/examples/DeviceTopicsNotAllowedError"
									},
									"Threat topic allowed only for organization with threat feature enabled": {
										"$ref": "#/components/examples/ThreatTopicNotAllowedError"
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/dataEvents/{eventTopic}": {
			"delete": {
				"tags": [
					"Data Events"
				],
				"summary": "Unsubscribe to an event topic.",
				"description": "Unsubscribe to an event topic.\n\nUnsubscription to `device-created`, `device-changed` and `device-removed` events are performed only for organization with `Install Statistics` feature enabled, and `threats-detected` event for those with `Threats` feature enabled.'\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/EventTopic"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Organization callback service information not set": {
										"$ref": "#/components/examples/OrganizationCallbackServiceNotSetError"
									},
									"Device topics allowed only for organization with install statistics": {
										"$ref": "#/components/examples/DeviceTopicsNotAllowedError"
									},
									"Threat topic allowed only for organization with threat feature enabled": {
										"$ref": "#/components/examples/ThreatTopicNotAllowedError"
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"post": {
				"tags": [
					"Data Events"
				],
				"summary": "Subscribe to an event topic",
				"description": "Subscribe the organization to an event topic. \n\nSubscription to `device-created`, `device-changed` and `device-removed` events are performed only for organization with `Install Statistics` feature enabled, and `threats-detected` event for those with `Threats` feature enabled.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/EventTopic"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Organization callback service information not set": {
										"$ref": "#/components/examples/OrganizationCallbackServiceNotSetError"
									},
									"Device topics allowed only for organization with install statistics": {
										"$ref": "#/components/examples/DeviceTopicsNotAllowedError"
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/organizations/{organizationId}": {
			"get": {
				"tags": [
					"Organizations"
				],
				"summary": "Obtain information about an organization",
				"description": "Get a managed organization's information. If the business user/ API key cannot manage the retrieved organization, the information about the login services (`login_type`), subscriber default language (`lang`) and terms of service (`tos`) are not returned.",
				"parameters": [
					{
						"$ref": "#/components/parameters/OrganizationId"
					}
				],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Organization"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"Organizations"
				],
				"summary": "Delete organization",
				"description": "Completely remove the organization specified by organizationId. An organization can be deleted only if it has been suspended for at least 1 day.",
				"parameters": [
					{
						"$ref": "#/components/parameters/OrganizationId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Organization not suspended": {
										"value": {
											"error_id": "92712683-d548-417e-9712-35be4f2a28ba",
											"message": "Organization is not suspended",
											"code": 677022,
											"status": "error"
										}
									},
									"Not enough time has passed to remove organization": {
										"value": {
											"error_id": "92712683-d548-417e-9712-35be4f2a28ba",
											"message": "Too early to remove this organization.",
											"code": 677021,
											"status": "error"
										}
									},
									"Organization still has subscribers": {
										"value": {
											"error_id": "7a1aef7b-0099-48e5-8fa4-d44f055fc0f2",
											"message": "Cannot delete an organization which still has subscribers",
											"code": 677029,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"patch": {
				"tags": [
					"Organizations"
				],
				"summary": "Update organization information.",
				"parameters": [
					{
						"$ref": "#/components/parameters/OrganizationId"
					}
				],
				"requestBody": {
					"description": "The following attributes can be changed for a child organization: \n*  `organization_label`\n*  `suspended`\n*  `subscriber_limit`\n*  `organization_type`\n\nAt least one of the above must be present in the request payload and any combination ca be used.\n\nAn OEM organization type can be changed only with another OEM organization type.\nNote that the `organization_type` cannot be changed for a `system integrator` organization.\n",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"organization_label": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/organization_label"
											}
										]
									},
									"subscriber_limit": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/subscriber_limit"
											}
										]
									},
									"suspended": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/suspended"
											}
										]
									},
									"organization_type": {
										"type": "string",
										"example": "operator",
										"description": "The type of the organization. Each organization type has some capabilities:\n ##### `system integrator`\n The _system integrator_ organization is an organization that can manage organizations but cannot manage subscribers.\n ##### `operator`\n The _operator_ organization is an organization that can manage subscribers but cannot manage organizations\n ##### `distributor`\n The _distributor_ organization is an organization that can have manage subscribers and organizations\n ##### `oem_operator`\n The _oem_operator_ organization is an organization that is selling Bitdefender rebranded products and it can manage subscribers.\n ##### `oem_distributor`\n The _oem_distributor_ organization is an organization that is selling Bitdefender rebranded products, and it can manage subscribers and organizations.\n",
										"enum": [
											"system integrator",
											"operator",
											"distributor",
											"oem_distributor",
											"oem_operator"
										]
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid organization type transition": {
										"value": {
											"error_id": "aa4a685d-13bc-4015-a174-8eb66645e8e6",
											"code": 677025,
											"status": "error",
											"message": "Invalid organization type transition"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/organizations": {
			"post": {
				"tags": [
					"Organizations"
				],
				"summary": "Create a new organization",
				"description": "Create a new organization that will be managed by current organization. The will be created using parameters are mandatory when creating a new organization:\n  *  `organization_label` \n  *  `organization_type`\n  *  `subscriber_limit`\n\nThe `subscriber_limit` for the created organization must not exceed the allocated quota for the parent organization.\nThe `organization_level` of the created organization is inherited from the parent organization, if it is set, otherwise is set by default to 1.\n",
				"requestBody": {
					"description": "Properties of created organization.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"organization_label": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/organization_label"
											}
										]
									},
									"organization_type": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/organization_type"
											}
										]
									},
									"subscriber_limit": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/subscriber_limit"
											}
										]
									}
								},
								"required": [
									"organization_label",
									"organization_type",
									"subscriber_limit"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"organization_id": {
											"$ref": "#/components/schemas/Organization/properties/organization_id"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"409": {
						"description": "Subscriber limit exceed for parent organization",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscriber limit exceeded": {
										"$ref": "#/components/examples/LimitExceededError"
									},
									"Unapproved organization cannot create managed organization": {
										"value": {
											"error_id": "9b5de11c-0707-492f-b834-7b5e8df77d80",
											"code": 677049,
											"status": "error",
											"message": "Unapproved organization cannot create other organizations"
										}
									},
									"Invalid organization type for this operation": {
										"value": {
											"error_id": "9b5de11c-0707-492f-b834-7b5e8df77d80",
											"code": 677025,
											"status": "error",
											"message": "Invalid organization type for this operation"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"get": {
				"tags": [
					"Organizations"
				],
				"summary": "Get information about current organization",
				"description": "Get information about the organization manged by the business user/ API key used to make the request.\n",
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Organization"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"patch": {
				"tags": [
					"Organizations"
				],
				"summary": "Update information about current organization.",
				"requestBody": {
					"description": "The following properties can be changed for the current organization\n*  `organization_logo`\n*  `organization_logo_id`\n*  `organization_name`\n*  `business_user_invite`\n*  `business_user_domains`\n*  `organization_website`\n*  `central_url`\n*  `customer_contact`\n*  `commercial_contact`\n*  `login_type`\n*  `lang`\n*  `callback_service`\n*  `epaas_webhook`\n\nThe type of login can only be set once and cannot be modified at a later time. However, all other login parameters except `type` can be modified at a later time. When modifying any subfield of `login_type`, the parameter `type` must exist and have the current value. Example - when an organization wants to enable the enrol emails:\n``` {\n    login_type: {\n      type: \"bitdefender\",\n      send_email : true\n    }\n}\n```\nAlso, when setting an external `login_type`, the property `allow_sso_inheritance` is set by default to 'true'\n",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"organization_name": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/organization_name"
											}
										]
									},
									"organization_logo": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/organization_logo"
											}
										]
									},
									"organization_logo_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/organization_logo_id"
											}
										]
									},
									"business_user_invite": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/business_user_invite"
											}
										]
									},
									"business_user_domains": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/business_user_domains"
											}
										]
									},
									"organization_website": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/organization_website"
											}
										]
									},
									"central_url": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/central_url"
											}
										]
									},
									"customer_contact": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/customer_contact"
											}
										]
									},
									"commercial_contact": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/commercial_contact"
											}
										]
									},
									"login_type": {
										"description": "The login services used by subscribers to login in the Bitdefender applications",
										"oneOf": [
											{
												"$ref": "#/components/schemas/BitdefenderLogin"
											},
											{
												"$ref": "#/components/schemas/ExternalImplicitLogin"
											},
											{
												"$ref": "#/components/schemas/ExternalOauthLogin"
											},
											{
												"$ref": "#/components/schemas/OtpLogin"
											},
											{
												"$ref": "#/components/schemas/InheritedLoginUpdate"
											}
										],
										"example": {
											"type": "bitdefender",
											"send_email": true
										}
									},
									"lang": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/lang"
											}
										]
									},
									"callback_service": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/callback_service"
											}
										]
									},
									"epaas_webhook": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Organization/properties/epaas_webhook"
											}
										]
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid organization type transition": {
										"description": "Changing the organization type of an OEM organization to an non OEM type is not allowed. Changing the organization type of a system integrator is not allowed",
										"value": {
											"error_id": "9b5de11c-0707-492f-b834-7b5e8df77d80",
											"code": 677012,
											"status": "error",
											"message": "Invalid organization type transition"
										}
									},
									"Login type otp cannot be set for organization without OTP feature": {
										"description": "In order to be able to set login_type to otp, the organization plan must have the OTP feature enabled.",
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"code": 677046,
											"status": "error",
											"message": "The OTP feature is not available"
										}
									},
									"Cannot set implicit login type": {
										"description": "The implicit external SSO is deprecated and cannot be used to configure an organization that does not already have the implicit configuration set.",
										"value": {
											"error_id": "9b5de11c-0707-492f-b834-7b5e8df77d80",
											"code": 677028,
											"status": "error",
											"message": "Cannot set external implicit SSO"
										}
									},
									"Cannot update an unapproved organization": {
										"description": "Each new organization requires approval in order to be configured.",
										"value": {
											"error_id": "9b5de11c-0707-492f-b834-7b5e8df77d80",
											"code": 677049,
											"status": "error",
											"message": "The organization is not approved"
										}
									},
									"EPAAS webhook cannot be set for an organization without EPAAS feature": {
										"description": "The `epaas_webhook` configuration is available only for organization that have the EPAAS feature enabled.",
										"value": {
											"error_id": "61d518f8-c1fb-4448-8510-181ca872b75c",
											"code": 677046,
											"status": "error",
											"message": "The EPAAS feature is not available"
										}
									},
									"SSO authorization skip can be used only for an organization that has the EPAAS feature enabled": {
										"description": "The `skip` option for the authorization configuration of the authorization code SSO is available only for the organization that have the EPAAS feature enabled.",
										"value": {
											"error_id": "9a5da2ec-92cb-42a3-8292-28c746229203",
											"code": 677046,
											"status": "error",
											"message": "The EPAAS feature is not available"
										}
									},
									"The organization to be inherited is not valid": {
										"description": "The organization to be inherited is not eligible of SSO inheritance",
										"value": {
											"error_id": "9a5da2ec-92cb-42a3-8292-28c746229203",
											"code": 677050,
											"status": "error",
											"message": "The organization to be inherited is not valid"
										}
									},
									"The organization already inherits SSO": {
										"description": "The organization already inherits SSO",
										"value": {
											"error_id": "9a5da2ec-92cb-42a3-8292-28c746229203",
											"code": 677052,
											"status": "error",
											"message": "The organization already inherits SSO"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/organizations/me/inheritableSso": {
			"get": {
				"tags": [
					"Organizations"
				],
				"summary": "Get the SSO configuration that can inherited from the parent organizations.",
				"description": "To qualify for inheritance, an organization must meet the following criteria:\n1. The `login_type.allow_sso_inheritance` is set to `true`\n2. The `login_type.type` is anything other than `inherited`, and for organizations that have `login_type.type`: `bitdefender` the organization type must also be `oem`\n\nAlso, the organization that has a non-OEM type cannot inherit the SSO configuration from an organization that has an OEM type.\nAlso, the organization that has a OEM type cannot inherit the SSO configuration from an organization that has an non-OEM type.\n",
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"inheritable_sso": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"organization_id": {
														"type": "string",
														"example": "7464eab7-6b29-4fd6-82a2-e40d6264a390"
													},
													"organization_label": {
														"type": "string",
														"example": "Bitdefender"
													},
													"organization_name": {
														"type": "string",
														"example": "Bitdefender"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/organizations/{organizationId}/tree": {
			"get": {
				"tags": [
					"Organizations"
				],
				"summary": "Get tree of suborganizations for organization with specified ID.",
				"description": "Returns a human-readable tree of all the organizations managed by the one identified by organization ID.\\\nFor each organization listed, the following fields will be displayed:\n*  **created**: timestamp when organization was created\n*  **last_updated**: timestamp when organization was last modified\n*  **organization_name**: organization name seen by subscribers in Bitdefender Central\n*  **organization_type**: one of the following 3 types of organizations:\n    *    **operator**: can have subscribers, cannot manage organizations\n    *    **distributor**: can have subscribers, cannot manage organizations\n    *    **system integrator**: cannot have subscribers, can manage other organizations\n*  **parent_id**: string that identifies parent organization\n*  **suspended**: boolean indicating whether organization is suspended\n*  **organization_id**: string identifying organization\n*  **plan**: API requests quota pricing plan\n    *    **apikey**: number of requests that can be sent using an organization's API Key in 20 minutes time frame.\n    *    **organization**: total API requests available for organization in a day\n    *    **name**: plan name\n*  **suborganizations**: a list of organizations managed by this organization. Objects in this array will contain the same properties or it will be empty.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/OrganizationId"
					}
				],
				"responses": {
					"200": {
						"description": "Valid request.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"created": {
											"type": "number"
										},
										"organization_name": {
											"type": "string"
										},
										"suspended": {
											"type": "boolean"
										},
										"organization_type": {
											"type": "string",
											"enum": [
												"operator",
												"distributor",
												"system integrator"
											]
										},
										"suborganizations": {
											"type": "array",
											"items": {
												"type": "object"
											}
										}
									}
								},
								"example": {
									"created": 1550057174000,
									"last_updated": 1550064497656,
									"organization_name": "ParentOrganization",
									"organization_type": "distributor",
									"parent_id": "ac90019f-6713-49c1-bd56-242d7040176e",
									"suspended": false,
									"organization_id": "0019addb-6b29-4fd6-82a2-e40d6264a440",
									"suborganizations": [
										{
											"created": 1551286216000,
											"organization_label": "ChildOrganizationLabel1",
											"organization_name": "ChildOrganizationName1",
											"organization_type": "distributor",
											"parent_id": "0019addb-6b29-4fd6-82a2-e40d6264a440",
											"suspended": false,
											"organization_id": "89fbf8d7-a1f3-4079-b6db-1c445fc7b8aa",
											"suborganizations": []
										},
										{
											"created": 1551278529000,
											"organization_label": "ChildOrganizationName2",
											"organization_name": "ChildOrganizationName1",
											"organization_type": "operator",
											"parent_id": "0019addb-6b29-4fd6-82a2-e40d6264a440",
											"suspended": false,
											"organization_id": "18479eda-61f3-4dab-ac36-8652510cb665",
											"suborganizations": []
										}
									]
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/organizations/{organizationId}/businessUsers": {
			"get": {
				"tags": [
					"Business users"
				],
				"summary": "Retrieve organization's business users.",
				"description": "List all business users for a managed organization. For each business user, the following information will be displayed\n* **user_id**: string identifying that business user\n* **organization_id**: organization to which the business user belongs to\n* **email**: email address\n* **roles**: an array containing the roles assigned to this user\n* **state**: *active* or *pending*, depending if the account was confirmed or not.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/OrganizationId"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"user_id": {
												"type": "string",
												"example": "1e8fc839-6df4-4b4d-b8b2-eea9015ef05d"
											},
											"email": {
												"type": "string",
												"example": "businessUser1@domain.com"
											},
											"organization_id": {
												"type": "string",
												"example": "7464eab7-6b29-4fd6-82a2-e40d6264a390"
											},
											"roles": {
												"type": "array",
												"items": {
													"type": "string",
													"enum": [
														"active",
														"pending"
													]
												}
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Organization not found": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "Organization not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Business users"
				],
				"summary": "Create a new business user for the organization",
				"description": "Create a business user for an organization managed by current organization. Required parameters are:\n* **email**: email address\n* **roles**: an array containing the roles assigned to this user\n\nThe new business user will have to create an account in Bitdefender Login. After this, he will be able to access the MSP Console.\n",
				"parameters": [
					{
						"name": "organizationId",
						"description": "Organization ID for which to create a business user. The organization with organizationId must be a direct child of current user's organization.",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"example": "businessUser@bitdefender.com"
									},
									"roles": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"admin",
												"auditor"
											],
											"example": "admin"
										}
									}
								},
								"required": [
									"email",
									"roles"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": {
											"type": "integer",
											"example": 0
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/organizations/{organizationId}/products": {
			"get": {
				"tags": [
					"Products"
				],
				"summary": "List an organization's products.",
				"parameters": [
					{
						"$ref": "#/components/parameters/OrganizationId"
					}
				],
				"description": "Retrieve the list of products that an organization is allowed to distribute.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/ListOfProducts"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/organizations/{organizationId}/products/{productId}": {
			"post": {
				"tags": [
					"Products"
				],
				"summary": "Add a new product to the organization portfolio.",
				"parameters": [
					{
						"$ref": "#/components/parameters/OrganizationId"
					},
					{
						"$ref": "#/components/parameters/ProductId"
					}
				],
				"description": "Enable the specified organization to resell a product identified by productId. It is mandatory that the current organization has that productId in its list of products and that it is not suspended. \\\nA suborganization with an enabled product can apply it to its subscribers or can enable it to its own managed organizations.\nFor organization that are OEM operators, the assigned product must support the OEM label associated with the organization that is receiving the product, except if that organization's type is `system_operator`.\n",
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Product is not owned": {
										"value": {
											"error_id": "6c583d80-d532-4088-a48f-fc6960f56719",
											"code": 677013,
											"status": "error",
											"message": "Cannot add products that are not owned"
										}
									},
									"Product is suspended": {
										"value": {
											"error_id": "79ec532c-39f0-477a-a827-df3ab62fed91",
											"code": 677026,
											"status": "error",
											"message": "Product suspended"
										}
									},
									"Unsupported OEM label": {
										"value": {
											"error_id": "48d5f4b8-6816-4f38-be92-5e1d71d54492",
											"code": 677035,
											"status": "error",
											"message": "Unsupported OEM label"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Product already owned",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Product already owned": {
										"value": {
											"error_id": "79cf7288-c9dc-4c47-a388-c5ae125fd5c3",
											"code": 677020,
											"status": "error",
											"message": "Product already present"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"patch": {
				"tags": [
					"Products"
				],
				"summary": "Suspends or resumes the product for the organization.",
				"parameters": [
					{
						"$ref": "#/components/parameters/OrganizationId"
					},
					{
						"$ref": "#/components/parameters/ProductId"
					}
				],
				"description": "Suspends or resumes a product for a child organization. Once suspended, the product cannot be applied to subscribers or resold to suborganizations. The product suspension status will propagate to all the suborganizations in the managed tree which were affected by a previous change to the product's status.\n\nRequest body has one field:\n* **suspended** : *true* or *false*\n",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"suspended": {
										"type": "boolean"
									}
								},
								"required": [
									"suspended"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Product is not owned": {
										"value": {
											"error_id": "6c583d80-d532-4088-a48f-fc6960f56719",
											"code": 677013,
											"status": "error",
											"message": "Cannot add products that are not owned"
										}
									},
									"Product is suspended": {
										"value": {
											"error_id": "79ec532c-39f0-477a-a827-df3ab62fed91",
											"code": 677026,
											"status": "error",
											"message": "Product suspended"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Product already owned",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Product already owned": {
										"value": {
											"error_id": "79cf7288-c9dc-4c47-a388-c5ae125fd5c3",
											"code": 677020,
											"status": "error",
											"message": "Product already present"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/organizations/{organizationId}/businessUsers/{userId}": {
			"delete": {
				"summary": "Delete business user for managed organization",
				"tags": [
					"Business users"
				],
				"description": "Remove a business user from a managed organization. The organization must be a direct child of current organization.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/OrganizationId"
					},
					{
						"$ref": "#/components/parameters/UserId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Business user does not exist": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "Business user not found",
											"code": 677013,
											"status": "error"
										}
									},
									"Organization does not exist": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "Organization user not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/businessUsers/me/accessLogs": {
			"get": {
				"tags": [
					"Business users"
				],
				"summary": "Obtain the access logs for the current business user.",
				"description": "Access logs contain information about when the users log in the MSP Console. This request will work with authorization type Bearer. It will return an error if Authorization header is Api Key.",
				"parameters": [
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/Limit"
					},
					{
						"name": "from",
						"in": "query",
						"description": "The beginning of time period desired to view the logs",
						"schema": {
							"$ref": "#/components/schemas/Timestamp"
						}
					},
					{
						"name": "to",
						"in": "query",
						"description": "The ending of time period desired to view the logs",
						"schema": {
							"$ref": "#/components/schemas/Timestamp"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List of access logs",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"logs": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/AccessLog"
											}
										},
										"count": {
											"$ref": "#/components/schemas/QueryCount"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/BusinessUserNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/businessUsers/{userId}": {
			"get": {
				"tags": [
					"Business users"
				],
				"summary": "Get information about a business user",
				"description": "Get information about a business user who is member in the same organization as current business user. **userId** can also have the special value **me**, which will return information about current user. For the latter, it is mandatory that Authorization type is Bearer token. The response will contain the following information:\n* **user_id**: string identifying the business user\n* **organization_id**: string identifying the organization the business user belongs to.\n* **email**: e-mail address of the user\n* **roles**: list of roles assigned to the user\n* **state**: *active* or *pending*, whether the user has activated his account or not\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/UserId"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BusinessUser"
								}
							}
						}
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Business user not found": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "Business user not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Business users"
				],
				"summary": "Update business user",
				"description": "Update information about a business user. Fields that can be changed are:\n* **state**: enable or disable an account. Possible values are *active* or *inactive*.\n* **roles** object with either of these properties\n  * **add**: array of roles to add to business user\n  * **remove**: array of roles to be removed from business user\n\nOne business user cannot update its own properties.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/UserId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"state": {
										"type": "string",
										"enum": [
											"active",
											"inactive"
										],
										"example": "inactive"
									},
									"roles": {
										"type": "object",
										"properties": {
											"add": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"example": [
													"admin",
													"40736957-6e85-44fc-9671-7751c00a6ff7"
												]
											},
											"remove": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"example": [
													"admin",
													"integration_manager",
													"reseller_admin",
													"subscriber_manager",
													"auditor"
												]
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Operation succeeded",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": {
											"type": "integer",
											"example": 0
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Update own user": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "This business user cannot be updated",
											"code": 677012,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete business user",
				"tags": [
					"Business users"
				],
				"description": "Delete a business user from current organization. One cannot delete his own account.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/UserId"
					}
				],
				"responses": {
					"200": {
						"description": "Operation succeeded",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": {
											"type": "integer",
											"example": 0
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Delete own user": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "You cannot remove this business user",
											"code": 677012,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Business user not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Inexistent business user": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "Business user not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/businessUsers": {
			"get": {
				"tags": [
					"Business users"
				],
				"summary": "List business users for current organization.",
				"description": "Get all business users belonging to current organization.\\\nFor every existing business user, will return the following information:\n  * **user_id**: string identifying the business user\n  * **organization_id**: string identifying the organization the business user belongs to.\n  * **email**: e-mail address of the user\n  * **roles**: list of roles assigned to the user\n  * **state**: *active* or *pending*, whether the user has activated his account\n",
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/BusinessUser"
									}
								},
								"example": [
									{
										"user_id": "91e5ea11-a13c-4fd1-a112-085a115da1c0",
										"organization_id": "ac2f6072-a191-91c1-0d56-912da1191a1e",
										"email": "businessUser2@Organization.com",
										"roles": [
											"admin"
										],
										"state": "active"
									},
									{
										"user_id": "80ac58c7-26a7-9180-aa11-0e39df70a1a6",
										"organization_id": "ac2f6072-a191-91c1-0d56-912da1191a1e",
										"email": "businessUser2@Organization.com",
										"roles": [
											"admin"
										],
										"state": "active"
									},
									{
										"user_id": "a11daace-d659-4e29-06ef-ea11cef912f5",
										"organization_id": "ac2f6072-a191-91c1-0d56-912da1191a1e",
										"email": "businessUser3@Organization.com",
										"roles": [
											"admin"
										],
										"state": "pending"
									}
								]
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Business users"
				],
				"summary": "Create business user for current organization",
				"description": "Create a new business user for current organization.\\\nFor the newly created users, you can specify the following properties:\n* **email**: email address for the business user. He will need to create an account with this email and will use it to log in.\n* **roles**: An array of role names or IDs the business user will have.\n",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"example": "businessUser1@domain.com"
									},
									"roles": {
										"type": "array",
										"items": {
											"type": "string"
										},
										"example": [
											"admin"
										],
										"minLength": 1
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": {
											"type": "integer",
											"example": 0
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid business user domain": {
										"description": "In order to be able to create a business user, the email domain of the email address should be in the list of allowed domains configured for the organization",
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"code": 677012,
											"status": "error",
											"message": "Invalid email domain for business user"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/keys": {
			"get": {
				"tags": [
					"Keys"
				],
				"summary": "List all API Keys",
				"description": "Get all API Keys of current organization. The following properties will be returned for each API Key:\n* **roles**: array of roles assigned to key.\n* **key**: ID of API Key which can be used to authorize requests.\nMore information about each API Key can be obtained by performing a GET operation at _'/keys/{keyId}'_\n* **key_label**: human-readable key name.\n",
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"roles": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"example": [
													"admin"
												]
											},
											"key": {
												"type": "string",
												"example": "60139ed5-240c-478b-bdd8-86512dcda511"
											},
											"key_label": {
												"type": "string",
												"example": "test key"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Keys"
				],
				"summary": "Create API Key",
				"description": "Create a new API Key for current organization. Parameters:\n* **roles**: array of roles the new API Key will have. Can be a default role (i.e **admin**, **auditor**, etc.) or a Role ID for a custom created role.\n* **key_label**: human-readable name for API Key.\n\nParameter **roles** is mandatory. The API key will have the permissions of the roles assigned.\n",
				"requestBody": {
					"description": "JSON containing desired roles for new API Key.",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"roles": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"admin",
												"integration_manager",
												"reseller_admin",
												"subscriber_manager",
												"auditor"
											],
											"example": "admin"
										}
									},
									"key_label": {
										"type": "string",
										"example": "staging key"
									}
								},
								"required": [
									"roles"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns generated API Key.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"token": {
											"type": "string",
											"example": "7beb8ba4-c8d2-49b2-97d1-8f36a96df62b"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/keys/{keyId}": {
			"get": {
				"tags": [
					"Keys"
				],
				"summary": "Get properties of API Key.",
				"description": "Get detailed information about an API Key. Will return the following information:\n* **key**: API Key ID.\n* **roles**: array of roles assigned to this API Key. Can be either names of default roles or role IDs.\n* **key_label**: human-readable name for API Key.\n* **remaining_quota**\n    * **quota**: remaining available API Keys\n    * **time**: seconds remaining to te expiration of time frame.\n* **total_quota**: total API key calls that can be performed in time frame. This value is according to organization plan.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/KeyId"
					}
				],
				"responses": {
					"200": {
						"description": "Returns API Key roles and remaining quota",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"key_label": {
											"type": "string",
											"example": "staging key"
										},
										"key": {
											"type": "string",
											"example": "342"
										},
										"roles": {
											"type": "array",
											"items": {
												"type": "string",
												"example": "admin"
											}
										},
										"remaining_quota": {
											"type": "object",
											"properties": {
												"quota": {
													"type": "number",
													"example": 300
												},
												"time": {
													"type": "number",
													"example": 600
												}
											}
										},
										"total_quota": {
											"type": "number",
											"example": 500
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"API Key not found": {
										"value": {
											"error_id": "0181d42b-ab18-42c6-b8cd-0446fb502885",
											"message": "API Key not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Keys"
				],
				"summary": "Change API Key roles or label",
				"description": "Edit roles assigned to an API Key or its label. You can both add and remove roles in a single API call. Request body has the following properties:\n* **roles**\n    * **add**: array containing the roles to be added\n    * **remove**: array containing the roles to be removed\n* **key_label**: human-readable name for API key. \n\nAt least one field has to exist.\\\nRoles values can be default roles (i.e **admin**, **auditor**, etc.) or Role IDs for a custom created roles.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/KeyId"
					}
				],
				"requestBody": {
					"description": "Contains new roles to be added and roles to be removed.",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"roles": {
										"type": "object",
										"properties": {
											"add": {
												"type": "array",
												"items": {
													"type": "string",
													"enum": [
														"admin",
														"integration_manager",
														"reseller_admin",
														"subscriber_manager",
														"auditor"
													]
												}
											},
											"remove": {
												"type": "array",
												"items": {
													"type": "string",
													"enum": [
														"admin",
														"integration_manager",
														"reseller_admin",
														"subscriber_manager",
														"auditor"
													]
												}
											}
										}
									},
									"key_label": {
										"type": "string",
										"example": "production key"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"404": {
						"description": "Invalid parameter API Key",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"API Key not found": {
										"value": {
											"error_id": "cf4b29f6-714a-4faf-afce-127e5d49396e",
											"message": "API Key not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Keys"
				],
				"summary": "Delete an API Key",
				"description": "Delete the API Key identified by the ID in parameters. All API calls using the API Key will stop working.",
				"parameters": [
					{
						"$ref": "#/components/parameters/KeyId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"ApiKey not found": {
										"value": {
											"error_id": "b3ddfe16-d374-47d7-b5a2-3430c970328e",
											"message": "ApiKey not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/clientCredentials": {
			"get": {
				"tags": [
					"ClientCredentials"
				],
				"summary": "List all Client Credentials",
				"description": "Get all Client Credentials of current organization. The following properties will be returned for each Client Credentials:\n* **roles**: array of roles assigned to client credentials.\n* **client_id**: ID of Client Credentials which can be used to authorize requests.\nMore information about each Client Credentials can be obtained by performing a GET operation at _'/clientCredentials/{clientId}'_\n* **label**: human-readable Client Credentials name.\n",
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"roles": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"example": [
													"admin"
												]
											},
											"client_id": {
												"type": "string",
												"example": "60139ed5-240c-478b-bdd8-86512dcda511"
											},
											"label": {
												"type": "string",
												"example": "test client"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"post": {
				"tags": [
					"ClientCredentials"
				],
				"summary": "Create Client Credentials",
				"description": "Create a new Client Credentials for current organization. Parameters:\n* **roles**: array of roles the new Client Credentials will have. Can be a default role (i.e **admin**, **auditor**, etc.) or a Role ID for a custom created role.\n* **label**: human-readable Client Credentials name.\n\nParameter **roles** is mandatory. The Client Credentials will have the permissions of the roles assigned.\n",
				"requestBody": {
					"description": "JSON containing desired roles for new Client Credentials.",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"roles": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"admin",
												"integration_manager",
												"reseller_admin",
												"subscriber_manager",
												"auditor"
											],
											"example": "admin"
										}
									},
									"label": {
										"type": "string",
										"example": "staging client"
									}
								},
								"required": [
									"roles"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns generated Client Credentials.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"client_id": {
											"type": "string",
											"example": "7beb8ba4-c8d2-49b2-97d1-8f36a96df62b"
										},
										"client_secret": {
											"type": "string",
											"example": "2gQNeK5cmxyZX5kZ"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid role array": {
										"value": {
											"error_id": "ba09501c-762f-455f-9356-506aea6f9f63",
											"code": 677018,
											"status": "error",
											"message": "Invalid role array"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/clientCredentials/{clientId}": {
			"get": {
				"tags": [
					"ClientCredentials"
				],
				"summary": "Get properties of Client Credentials.",
				"description": "Get detailed information about an Client Credentials. Will return the following information:\n* **client_id**: Client Credentials ID.\n* **roles**: array of roles assigned to this Client Credentials. Can be either names of default roles or role IDs.\n* **label**: human-readable name for Client Credentials.\n* **remaining_quota**\n    * **quota**: remaining available Client Credentials\n    * **time**: seconds remaining to te expiration of time frame.\n* **total_quota**: total Client Credentials calls that can be performed in time frame. This value is according to organization plan.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/ClientId"
					}
				],
				"responses": {
					"200": {
						"description": "Returns Client Credentials roles and remaining quota",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"label": {
											"type": "string",
											"example": "staging client"
										},
										"client_id": {
											"type": "string",
											"example": "7beb8ba4-c8d2-49b2-97d1-8f36a96df62b"
										},
										"roles": {
											"type": "array",
											"items": {
												"type": "string",
												"example": "admin"
											}
										},
										"remaining_quota": {
											"type": "object",
											"properties": {
												"quota": {
													"type": "number",
													"example": 300
												},
												"time": {
													"type": "number",
													"example": 600
												}
											}
										},
										"total_quota": {
											"type": "number",
											"example": 500
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Client Credentials not found": {
										"value": {
											"error_id": "0181d42b-ab18-42c6-b8cd-0446fb502885",
											"message": "ClientCredentials not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"patch": {
				"tags": [
					"ClientCredentials"
				],
				"summary": "Change Client Credentials roles or label",
				"description": "Edit roles assigned to an Client Credentials or its label. You can both add and remove roles in a single API call. Request body has the following properties:\n* **roles**\n    * **add**: array containing the roles to be added\n    * **remove**: array containing the roles to be removed\n* **label**: human-readable name for Client Credentials. \n\nAt least one field has to exist.\\\nRoles values can be default roles (i.e **admin**, **auditor**, etc.) or Role IDs for a custom created roles.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/ClientId"
					}
				],
				"requestBody": {
					"description": "Contains new roles to be added and roles to be removed.",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"roles": {
										"type": "object",
										"properties": {
											"add": {
												"type": "array",
												"items": {
													"type": "string",
													"enum": [
														"admin",
														"integration_manager",
														"reseller_admin",
														"subscriber_manager",
														"auditor"
													]
												}
											},
											"remove": {
												"type": "array",
												"items": {
													"type": "string",
													"enum": [
														"admin",
														"integration_manager",
														"reseller_admin",
														"subscriber_manager",
														"auditor"
													]
												}
											}
										}
									},
									"label": {
										"type": "string",
										"example": "production client"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Invalid parameter Client Credentials",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"ClientCredentials not found": {
										"value": {
											"error_id": "cf4b29f6-714a-4faf-afce-127e5d49396e",
											"message": "ClientCredentials not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid role array": {
										"value": {
											"error_id": "ba09501c-762f-455f-9356-506aea6f9f63",
											"code": 677018,
											"status": "error",
											"message": "Invalid role array"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"ClientCredentials"
				],
				"summary": "Delete an Client Credentials",
				"description": "Delete the Client Credentials identified by the ID in parameters. All API calls using the token Client Credentials will stop working.",
				"parameters": [
					{
						"$ref": "#/components/parameters/ClientId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"ClientCredentials not found": {
										"value": {
											"error_id": "b3ddfe16-d374-47d7-b5a2-3430c970328e",
											"message": "ClientCredentials not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/clientCredentials/{clientId}/downloads": {
			"get": {
				"tags": [
					"ClientCredentials"
				],
				"summary": "Download a csv file containing client secret",
				"description": "Retrieve client secret of the given client id. This API can be called only using a Bearer token. The ApiKey/ClientCredentials authenticated calls will receive an authentication error.\nClient secret can be downloaded only one time per client credentials\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/ClientId"
					}
				],
				"responses": {
					"200": {
						"description": "Returns a csv file client_id and client_secret",
						"content": {
							"text/csv": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Client Credentials not found": {
										"value": {
											"error_id": "0181d42b-ab18-42c6-b8cd-0446fb502885",
											"message": "ClientCredentials not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"409": {
						"description": "Error in case client_secret has been already downloaded",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Client_secret already downloaded": {
										"value": {
											"error_id": "25e42568-d674-4406-92a7-f3f32799c25d",
											"code": 677012,
											"status": "error",
											"message": "Client_secret already downloaded"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/tokens": {
			"post": {
				"tags": [
					"Tokens"
				],
				"summary": "Generate new JWT token based on Client Credentials",
				"description": "Create a new token based on Client Credentials. Parameters:\n* **client_id**: ID of the client credentials.\n* **client_secret**: Secret for the client credentials\n* **grant**: client_credentials\nAll parameters are mandatory.\n",
				"requestBody": {
					"description": "JSON containing desired roles for new Token.",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"client_id": {
										"type": "string",
										"example": "7beb8ba4-c8d2-49b2-97d1-8f36a96df62b"
									},
									"client_secret": {
										"type": "string",
										"example": "dfsdFDSFjfdsfkjdshDSAFDSJKdfssdk"
									},
									"grant": {
										"type": "string",
										"enum": [
											"client_credentials"
										],
										"example": "client_credentials"
									}
								},
								"required": [
									"client_id",
									"client_secret",
									"grant"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns generated token.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"token": {
											"type": "string",
											"description": "The token.",
											"example": "eyJ0eXAiOiJhdCtqd3QiLCJhbGciOiJFUzI1NiIsImtpZCI6Ill2VkJjd3ZQZlAiLCJ4NXQiOiJLUExfQy1NUW"
										},
										"expires_in": {
											"type": "number",
											"description": "The token validity in seconds.",
											"example": 1235
										},
										"type": {
											"type": "string",
											"description": "The token type.",
											"enum": [
												"Bearer"
											],
											"example": "Bearer"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"Tokens"
				],
				"summary": "Invalidates a token generated for Client Credentials",
				"description": "Invalidates token from Authorization header\n",
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					}
				}
			}
		},
		"/v1/subscribers": {
			"get": {
				"tags": [
					"Subscribers"
				],
				"summary": "List subscribers",
				"description": "List all subscribers of your organization. Information will be paginated, with a default value of 20 entries per page. The subscribers can be filtered using the following criteria:\n* `product_id`\n* `state`\n* `suspended`\n* `subscription_state`\n* `created_from`\n* `created_to`\n* `email`\n\nBeside the list of subscribers, the response will contain the total number of subscribers matched by the filters and a query identifier which can be used in executing tasks.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/Limit"
					},
					{
						"name": "product_id",
						"in": "query",
						"description": "The ID of the product assigned. If specified, only the subscribers that own the product will be returned",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "state",
						"in": "query",
						"required": false,
						"description": "The state of the subscriber. If specified, only the subscribers in this state will be returned",
						"schema": {
							"$ref": "#/components/schemas/Subscriber/properties/state"
						}
					},
					{
						"name": "suspended",
						"description": "The product suspended flag. If specified, only the subscribers having a product in the state provided will be returned",
						"in": "query",
						"required": false,
						"schema": {
							"type": "boolean",
							"enum": [
								true,
								false
							]
						},
						"deprecated": true
					},
					{
						"name": "subscription_state",
						"description": "The subscription state (active / suspended / trial / none). If specified, only the subscribers having a subscription in the state provided will be returned.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"active",
								"suspended",
								"trial",
								"none"
							]
						}
					},
					{
						"name": "created_to",
						"in": "query",
						"description": "The millisecond timestamp when the subscriber was created. It works as a range filter and is used together with the `created_from` parameter. If this parameter is not specified and the `created_from` is specified, then this parameter will default to _now timestamp_ (the moment of the request)",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Timestamp"
						}
					},
					{
						"name": "created_from",
						"required": false,
						"description": "The millisecond timestamp when the subscriber was created. It works as a range filter and is used together with the `created_to` parameter. If this parameter is not specified and the `created_to` is specified, then this parameter will default to _0_ (the moment of the request)",
						"in": "query",
						"schema": {
							"$ref": "#/components/schemas/Timestamp"
						}
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"description": "Email regex filter. If specified, only the subscribers whose email is matching the regex will be returned",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns the list of subscribers",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"subscribers": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"subscriber_id": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Subscriber/properties/subscriber_id"
															}
														]
													},
													"email": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Subscriber/properties/email"
															}
														]
													},
													"phone": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Subscriber/properties/phone"
															}
														]
													},
													"username": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Subscriber/properties/username"
															}
														]
													},
													"external_subscriber_id": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Subscriber/properties/external_subscriber_id"
															}
														]
													},
													"state": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Subscriber/properties/state"
															}
														]
													},
													"created": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Subscriber/properties/created"
															}
														]
													},
													"subscriptions": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"product_id": {
																	"type": "string",
																	"example": "bitdefender-av-10device"
																},
																"subscription_id": {
																	"type": "string",
																	"example": "f6b8bc79-6ccd-474c-bc00-f1c22267d7e2"
																},
																"state": {
																	"type": "string",
																	"example": "suspended"
																}
															}
														}
													}
												}
											}
										},
										"count": {
											"$ref": "#/components/schemas/QueryCount"
										},
										"query_hash": {
											"$ref": "#/components/schemas/QueryHash"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"post": {
				"tags": [
					"Subscribers"
				],
				"summary": "Create new subscriber",
				"description": "Create a new subscriber for the current organization. A new subscriber can be created using his email address, phone number or username (**you will have to provide only one of them**). If the organization is using the Bitdefender login services, with invite email activated, the subscriber will receive an email with details on how he can complete the enrolment process. The enrolment URL sent in the invite email is also returned on the successful response for this API (this is useful when the invite email are turned off, allowing the organization to deliver the URL through other means).\n\nIf the organization is using an External SSO, then no enrolment URL is generated. The enrolment process will be automatically completed when the subscriber is logging in for the first time in the Bitdefender applications. If the organization has the share link feature activated, the enrollment process ends when the user adds the first device to its account (a device that has installed a Bitdefender product - rebranded or not - that is using a subscription slot).\n\nThe subscriber will appear with state `pending` until the enrolment process is complete. When the subscriber completes the enrolment process then the state will change to `active`.\n\nAn organization can create a subscriber if the `commercial_contact`, `organization_name`, `organization_website`, `organization_logo` and `login_type` are configured for the organization and if `organization_type` is different than `system_integrator`. For organization that are _oem operators_ the `oem_label` must be also set in order to be able to create subscribers.\nFor the `commercial_contact` of the organization, the `website` field is mandatory, while the `phone` and `email` fields are optional, but recommended to be completed.\n\nParameters\n  * `email`\n  * `phone`\n  * `username`\n  * `external_subscriber_id`\n  * `lang`\n\nThe fields `email`, `phone` and `username` cannot be used at the same time and at least one of them should be present. The fields `phone` and `username` cannot be used to enrol subscribers if the organization is using Bitdefender login services.\n\nSubscribers can be enrolled by using just the `external_subscriber_id field`, but only if the organization is using the Bitdefender login services (with Download Links feature `disabled`) or external login configuration of SSO type OTP, thus the organizations which are using the Bitdefender login services and have the Download Links feature `enabled` the `email` is required.\n\nIn the case of Bitdefender login services, the `email` will be provided by the subscriber on account confirmation and will be unavailable in MSP API/console. Please note that in this case the enrol URL will only be returned in the response of this API (since no email address is available, the enrolment email cannot be sent).\\\nThe `lang` parameter is provided here to override the default subscriber language set for the organization (if you did not set the `lang` then by default _**English US**_) is used\n",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"type": "object",
										"properties": {
											"email": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/email"
													}
												]
											},
											"external_subscriber_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/external_subscriber_id"
													}
												]
											},
											"lang": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Lang"
													}
												]
											}
										},
										"required": [
											"email"
										]
									},
									{
										"type": "object",
										"properties": {
											"phone": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/phone"
													}
												]
											},
											"external_subscriber_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/external_subscriber_id"
													}
												]
											},
											"lang": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Lang"
													}
												]
											}
										},
										"required": [
											"phone"
										]
									},
									{
										"type": "object",
										"properties": {
											"username": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/username"
													}
												]
											},
											"external_subscriber_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/external_subscriber_id"
													}
												]
											},
											"lang": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Lang"
													}
												]
											}
										},
										"required": [
											"username"
										]
									},
									{
										"type": "object",
										"properties": {
											"external_subscriber_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/email"
													}
												]
											},
											"lang": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Lang"
													}
												]
											}
										},
										"required": [
											"external_subscriber_id"
										]
									}
								]
							},
							"example": {
								"email": "subscriber@bitdefender.com",
								"external_subscriber_id": "bc320e5f8c8d8cf4fc8e2a7d43b29c9f7f1865fb0bf84d0ccb1a390d03fffe6e"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Subscriber successfully created.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"subscriber_id": {
											"allOf": [
												{
													"$ref": "#/components/schemas/Subscriber/properties/subscriber_id"
												}
											]
										},
										"enrol_url": {
											"allOf": [
												{
													"$ref": "#/components/schemas/Subscriber/properties/enrol_url/properties/value"
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Incomplete organization contact": {
										"$ref": "#/components/examples/InvalidContactError"
									},
									"Invalid organization type": {
										"$ref": "#/components/examples/InvalidTypeError"
									},
									"Incomplete login type": {
										"$ref": "#/components/examples/InvalidLoginError"
									},
									"Subscriber limit exceeded": {
										"$ref": "#/components/examples/LimitExceededError"
									},
									"Missing OEM label": {
										"$ref": "#/components/examples/MissingOemLabelError"
									},
									"Login type incompatible with subscriber identifiers": {
										"value": {
											"error_id": "c0b7e1e7-a841-4f01-8d22-b55b0b4450ff",
											"code": 677012,
											"status": "error",
											"message": "Login type incompatible with subscriber identifiers"
										},
										"description": "The combination of enrollment parameters is not compatible with SSO configuration of the organization"
									},
									"EPAAS webhook is not configured": {
										"value": {
											"error_id": "a23ds1e7-a841-4f01-8d22-b55b0b4450ff",
											"code": 677022,
											"status": "error",
											"message": "Missing EPAAS webhook"
										},
										"description": "In order to create subscribers for an organization with EPAAS strict, EPAAS webhook must be configured"
									},
									"Missing email for subscriber": {
										"value": {
											"error_id": "1a23e1e7-a841-4f01-8d22-b55b0b4450ff",
											"code": 677016,
											"status": "error",
											"message": "Missing email for subscriber"
										},
										"description": "The email is mandatory for the subscriber creation for the organizations that are using Bitdefender login services and have the Download Links feature enabled"
									}
								}
							}
						}
					},
					"422": {
						"description": "Duplicate subscriber identifier",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Duplicate subscriber identifier": {
										"value": {
											"error_id": "4787d532-b988-4d98-873d-27d092b12624",
											"code": 677020,
											"status": "error",
											"message": "Duplicate subscriber identifier"
										},
										"description": "A subscriber that has the exact same data (or partial) already exists for the organization"
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/subscribers/{subscriberId}": {
			"get": {
				"tags": [
					"Subscribers"
				],
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					}
				],
				"summary": "Get information about subscriber",
				"description": "Retrieve the full information about a subscriber. Unlike the subscriber list API, the subscription information is expanded to also contain all information that is available such as ID or created timestamp.",
				"responses": {
					"200": {
						"description": "Subscriber details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Subscriber"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"patch": {
				"description": "Un-manage subscriber account, i.e. to transform the account from a managed account to a non-managed Bitdefender account.\nThis operation is allowed in case a level 2 organization is wanting to free up a slot used by a subscriber that cannot be removed because it has active subscriptions from non-MSP sources.\nThis operation will be available only for organizations that are using Bitdefender Login. Any organization that has configured an external login will not be able to execute this operation.\nParameters\n  * `unmanage`\nThe `unmanage` field specifies that the subscriber will be unmanaged, should be set to true.\n",
				"tags": [
					"Subscribers"
				],
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"unmanage": {
										"type": "boolean",
										"enum": [
											true
										],
										"description": "Boolean flag that specifies that the subscriber will be un-managed"
									}
								},
								"required": [
									"unmanage"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscriber has subscriptions": {
										"value": {
											"error_id": "ae16b389-b09e-4558-99af-7fc404cfc1e9",
											"code": 677023,
											"status": "error",
											"message": "Cannot un-manage a subscriber with subscriptions"
										}
									},
									"Pending subscriber": {
										"value": {
											"error_id": "ba09501c-762f-455f-9356-506aea6f9f63",
											"code": 677023,
											"status": "error",
											"message": "Cannot un-manage a pending subscriber"
										}
									},
									"Invalid organization level": {
										"value": {
											"error_id": "62834ab5-d52e-4b9e-af94-063683c58859",
											"code": 677022,
											"status": "error",
											"message": "Cannot un-manage a subscriber for an organization with level different than 2"
										}
									},
									"Invalid login type": {
										"value": {
											"error_id": "08d35161-5add-4c14-a125-ead4636776ff",
											"code": 677028,
											"status": "error",
											"message": "Cannot un-manage a subscriber for an organization with configured external login"
										}
									},
									"Invalid subscribe state": {
										"value": {
											"error_id": "08d35161-5add-4c14-a125-ead4636776ff",
											"code": 677023,
											"message": "Cannot manage a subscriber with delete pending state",
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"description": "Delete subscriber from MSP. After deletion, subscriber will not be able to access his account. \nA subscriber cannot be deleted if it has active MSP subscriptions or if the organization level is 2 and it has active non-MSP subscriptions.\n\nDeleting a subscriber will set the its state to `delete_pending`, all the actions that are related to its managing will be disabled.\n",
				"tags": [
					"Subscribers"
				],
				"summary": "Delete a specified subscriber",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscriber has subscriptions": {
										"value": {
											"error_id": "ba09501c-762f-455f-9356-506aea6f9f63",
											"code": 677023,
											"status": "error",
											"message": "Cannot delete a subscriber with subscriptions"
										}
									},
									"Subscriber has active non-msp subscriptions": {
										"value": {
											"error_id": "4987d5431-b988-4d98-873d-27d092b12572",
											"code": 677023,
											"status": "error",
											"message": "Cannot delete a level 2 organization subscriber with active non-MSP subscriptions"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/subscribers/{subscriberId}/subscriptions": {
			"post": {
				"tags": [
					"Subscriptions"
				],
				"description": "Add a new subscription or trial for a product bundle to a subscriber, if it does not already have a trial subscription for the same bundle provided. The `product_id` provided must correspond to a product from the portfolio of your organization and must not be suspended.\nFor trial creation, _true_ should be passed to the *trial* parameter.\nSubscriptions operations are atomic, while an operation is performed on a subscription, no other operations can be performed on it.\nA subscriber can have maximum 7 subscriptions and 100 cumulated slots.\n\nThis API allows to create trial subscriptions only for organizations that have the `Trial` feature enabled. The `reservation_id` is not accepted for trial subscriptions.\n",
				"summary": "Add a new subscription to a subscriber",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"product_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/ProductId"
											},
											{
												"description": "The ID of the product used to create a subscription"
											}
										]
									},
									"trial": {
										"type": "boolean",
										"description": "Boolean flag that specifies whether the created subscription will be trial or not"
									},
									"external_subscription_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/ExternalIdentifier"
											},
											{
												"description": "ID used to identify external subscriptions. The ID does not need to be unique."
											}
										]
									},
									"reservation_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/ReservationId"
											},
											{
												"description": "ID used to identify reserved subscriptions. The ID does not need to be unique."
											}
										]
									}
								},
								"required": [
									"product_id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"subscription_id": {
											"allOf": [
												{
													"$ref": "#/components/schemas/Subscription/properties/subscription_id"
												},
												{
													"description": "The ID of the newly created subscription"
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Product not owned": {
										"$ref": "#/components/examples/ProductNotFoundError"
									},
									"Product suspended": {
										"$ref": "#/components/examples/OrganizationProductSuspendedError"
									},
									"Another operation is already running on the subscription": {
										"$ref": "#/components/examples/SubscriptionLockedError"
									},
									"Bundle used in active trial": {
										"value": {
											"error_id": "de8ddadc-057e-4ee4-94bf-4c62b79fe768",
											"code": 677040,
											"status": "error",
											"message": "An active trial is already assigned to this bundle"
										}
									},
									"Organization plan not eligible for trial": {
										"value": {
											"error_id": "e747af44-68ae-4ca3-88f8-15b023cf5752",
											"code": 677042,
											"status": "error",
											"message": "Organization plan not eligible for trial creation"
										}
									},
									"Maximum number of subscriptions reached": {
										"description": "This error occurs when the maximum number of 7 subscriptions per subscriber is exceeded by adding the new product subscription.",
										"value": {
											"error_id": "6fd182d2-6776-45bc-9854-962fd6d2f772",
											"code": 677031,
											"status": "error",
											"message": "Maximum number of subscriptions already reached"
										}
									},
									"Maximum number of cumulated slots already reached": {
										"description": "This error occurs when the maximum number of 100 subscription slots per subscriber is exceeded by adding the new product subscription.",
										"value": {
											"error_id": "428806fa-df1f-4512-97e2-6a8fbba39e22",
											"code": 677031,
											"status": "error",
											"message": "Maximum number of cumulated slots already reached"
										}
									},
									"Trial not allowed for this product": {
										"description": "This error occurs when the product is not allowed to have trial subscriptions.",
										"value": {
											"error_id": "6fd182d2-6776-45bc-9854-962fd6d2f772",
											"code": 677051,
											"status": "error",
											"message": "Trial not allowed for this product"
										}
									},
									"This product does not allow reservation": {
										"description": "This error occurs when the product is not allowed to have reserved subscriptions.",
										"value": {
											"error_id": "6fd182d2-6776-45bc-9854-962fd6d2f772",
											"code": 677053,
											"status": "error",
											"message": "This product does not allow reservation"
										}
									},
									"Trial does not allow reservation": {
										"description": "This error occurs when reservation_id is tried to be added on a trial subscription.",
										"value": {
											"error_id": "6fd182d2-6776-45bc-9854-962fd6d2f772",
											"code": 677054,
											"status": "error",
											"message": "Trial does not allow reservation"
										}
									},
									"Invalid subscribe state": {
										"value": {
											"error_id": "08d35161-5add-4c14-a125-ead4636776ff",
											"code": 677023,
											"message": "Cannot manage a subscriber with delete pending state",
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"patch": {
				"tags": [
					"Subscriptions"
				],
				"summary": "Suspend or resume all subscriptions of a subscriber.",
				"description": "This API allows to suspend/resume all subscriptions of a subscriber. Note that if a subscriber has the subscription suspended, it will lose access to the subscription and will remain unprotected (the applications installed will not work without a subscription). The subscription can be resumed at any later time.\n\nA suspended subscription will still be logged in the usage reports of an organization.\\\nA subscription is suspended by passing _true_ to parameter *suspended*, while _false_ will resume the subscriptions.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"suspended": {
										"type": "boolean",
										"description": "Subscription will be suspended if set to __true__ , resumed otherwise"
									}
								},
								"required": [
									"suspended"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": {
											"type": "number",
											"enum": [
												0
											]
										},
										"total": {
											"type": "number",
											"description": "total number of subscriptions",
											"example": 10
										},
										"updated": {
											"type": "number",
											"description": "the number of subscriptions that have actually changed their state",
											"example": 5
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscriber not found": {
										"$ref": "#/components/examples/SubscriberNotFoundError"
									},
									"Subscription not found": {
										"$ref": "#/components/examples/SubscriptionNotFoundError"
									}
								}
							}
						}
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscriber has no subscription": {
										"$ref": "#/components/examples/NoSubscriptionError"
									},
									"No subscriptions updated": {
										"value": {
											"error_id": "6fd182d2-6776-45bc-9854-962fd6d2f772",
											"code": 677033,
											"status": "error",
											"message": "All products already in state or involved in another operation"
										}
									},
									"Invalid subscribe state": {
										"value": {
											"error_id": "08d35161-5add-4c14-a125-ead4636776ff",
											"code": 677023,
											"message": "Cannot manage a subscriber with delete pending state",
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"Subscriptions"
				],
				"summary": "Remove all subscriptions of a subscriber",
				"description": "Completely remove all subscriptions of a subscriber. All his devices will become immediately unprotected.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Product not in portfolio": {
										"$ref": "#/components/examples/ProductNotFoundError"
									},
									"Product suspended": {
										"$ref": "#/components/examples/OrganizationProductSuspendedError"
									},
									"Product subscription already present": {
										"$ref": "#/components/examples/ProductPresentError"
									},
									"Another operation is already running on the subscription": {
										"$ref": "#/components/examples/SubscriptionLockedError"
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/subscribers/{subscriberId}/subscriptions/{subscriptionId}": {
			"patch": {
				"tags": [
					"Subscriptions"
				],
				"summary": "Suspend, resume subscription or convert trial subscription to on/off subscription.",
				"description": "As long as a subscriber has his product suspended, he will not have his devices protected. The subscription can be resumed at any later time.\nA suspended subscription will still be logged in the usage reports of an organization.\\\nA subscription is suspended by passing _true_ to parameter *suspended*, while _false_ will resume the subscription.\nA trial subscription can be converted to an on/off subscription by passing _true_ or a product id to parameter *convert*. Note that \nA subscription can be either suspended/resumed or converted in a single operation.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					},
					{
						"$ref": "#/components/parameters/SubscriptionId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"type": "object",
										"properties": {
											"suspended": {
												"type": "boolean",
												"description": "Subscription will be suspended if set to __true__ , resumed otherwise"
											}
										},
										"required": [
											"suspended"
										]
									},
									{
										"type": "object",
										"properties": {
											"convert": {
												"oneOf": [
													{
														"type": "string",
														"maxLength": 500,
														"minLength": 1,
														"description": "The ID of the product to be used in the on/off subscription. The product must have the same bundle as the product used to create the trial."
													},
													{
														"type": "boolean",
														"enum": [
															true
														],
														"description": "Will convert the trial to an on/off subscription using the product_id provided when the trial was created"
													}
												]
											}
										},
										"required": [
											"convert"
										]
									}
								],
								"example": {
									"suspended": true
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscription not found": {
										"$ref": "#/components/examples/SubscriptionNotFoundError"
									},
									"Subscriber not found": {
										"$ref": "#/components/examples/SubscriberNotFoundError"
									}
								}
							}
						}
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Product already suspended": {
										"$ref": "#/components/examples/ProductSuspendedError"
									},
									"Product already active": {
										"$ref": "#/components/examples/ProductActiveError"
									},
									"Another operation is already running on the subscription": {
										"$ref": "#/components/examples/SubscriptionLockedError"
									},
									"Subscription is not a trial": {
										"value": {
											"error_id": "accbf6e6-47e5-4825-8498-0c45d21c57a8",
											"code": 677043,
											"status": "error",
											"message": "The subscription is not a trial"
										}
									},
									"Subscription trial is not active": {
										"value": {
											"error_id": "accbf6e6-47e5-4825-8498-0c45d21c57a8",
											"code": 677041,
											"status": "error",
											"message": "The subscription trial is not active"
										}
									},
									"Invalid product_id for convert trial": {
										"value": {
											"error_id": "c9f3ad6b-33c6-4682-8f56-f712ee64fda4",
											"code": 677039,
											"status": "error",
											"message": "The product does not have same bundle"
										}
									},
									"Subscription trial cannot be suspended or resumed": {
										"value": {
											"error_id": "77f654df-fe90-4f10-b956-cf84af6543f6",
											"code": 677043,
											"status": "error",
											"message": "Subscription trial cannot be suspended or resumed"
										}
									},
									"Maximum number of cumulated slots already reached": {
										"description": "This error occurs when the maximum number of 100 subscription slots per subscriber is exceeded by converting a trial subscription.",
										"value": {
											"error_id": "428806fa-df1f-4512-97e2-6a8fbba39e22",
											"code": 677031,
											"status": "error",
											"message": "Maximum number of cumulated slots already reached"
										}
									},
									"Invalid subscribe state": {
										"value": {
											"error_id": "08d35161-5add-4c14-a125-ead4636776ff",
											"code": 677023,
											"message": "Cannot manage a subscriber with delete pending state",
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"Subscriptions"
				],
				"summary": "Remove product or trial product from subscriber",
				"description": "Completely remove a product from a subscriber. All his devices will become immediately unprotected.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					},
					{
						"$ref": "#/components/parameters/SubscriptionId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscriber not found": {
										"$ref": "#/components/examples/SubscriberNotFoundError"
									},
									"Subscription not found": {
										"$ref": "#/components/examples/SubscriptionNotFoundError"
									}
								}
							}
						}
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Product not owned": {
										"$ref": "#/components/examples/ProductNotFoundError"
									},
									"Product suspended": {
										"$ref": "#/components/examples/OrganizationProductSuspendedError"
									},
									"Another operation is already running on the subscription": {
										"$ref": "#/components/examples/SubscriptionLockedError"
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"put": {
				"tags": [
					"Subscriptions"
				],
				"summary": "Replace product subscription",
				"description": "Replace the product subscription of a subscriber with a subscription based on another product. This operation is recommended to be used in case of an subscription upgrade/downgrade. In the usage report only one product is counted, the product that is considered to be more valuable (regardless of the period being enabled).\nA subscription that has `reservation_id` already set can be replaced only by a product that allows reservations.\n\n**Attention! Replacing a suspended subscription will resume the subscription with the new product ID.**\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					},
					{
						"$ref": "#/components/parameters/SubscriptionId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"product_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/ProductId"
											},
											{
												"description": "The ID of the the product that will replace the current product"
											}
										]
									}
								},
								"required": [
									"product_id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscriber not found": {
										"$ref": "#/components/examples/SubscriberNotFoundError"
									},
									"Subscription not found": {
										"$ref": "#/components/examples/SubscriptionNotFoundError"
									}
								}
							}
						}
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Product not owned": {
										"$ref": "#/components/examples/ProductNotFoundError"
									},
									"Product suspended": {
										"$ref": "#/components/examples/OrganizationProductSuspendedError"
									},
									"Replacing a product with itself": {
										"description": "A product cannot be replaced by itself. Ensure that the `product_id` provided is always different than the product_id currently used in the subscription",
										"value": {
											"error_id": "5a8b9e7b-ced3-4f50-a84e-878358c4026a",
											"code": 677033,
											"status": "error",
											"message": "A product cannot replace itself"
										}
									},
									"Replacing a trial product": {
										"description": "A product of a trial subscription cannot be replaced.",
										"value": {
											"error_id": "08c4b627-73d7-4a75-a708-3ce2c6b1e71f",
											"code": 677043,
											"status": "error",
											"message": "A trial product cannot be replaced"
										}
									},
									"A replace action was already made": {
										"description": "The switch product API allows only one switch operation per month. Trying to make a second switch operation in the same month will trigger this error.",
										"value": {
											"error_id": "a49c4e36-f86b-498b-aafa-372d0a949f11",
											"code": 677012,
											"status": "error",
											"message": "Only one switch operation per month is allowed"
										}
									},
									"Maximum number of cumulated slots already reached": {
										"description": "This error occurs when the maximum number of 100 subscription slots per subscriber is exceeded by replacing the product.",
										"value": {
											"error_id": "428806fa-df1f-4512-97e2-6a8fbba39e22",
											"code": 677031,
											"status": "error",
											"message": "Maximum number of cumulated slots already reached"
										}
									},
									"Invalid subscribe state": {
										"value": {
											"error_id": "08d35161-5add-4c14-a125-ead4636776ff",
											"code": 677023,
											"message": "Cannot manage a subscriber with delete pending state",
											"status": "error"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Duplicate product subscription",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"The subscription already exists": {
										"description": "The subscriber already has a subscription for the provided product cannot receive another one.",
										"value": {
											"error_id": "87d545fc-fd59-423b-8ae1-a11819666604",
											"code": 677020,
											"status": "error",
											"message": "The subscriber has a product with this id"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/subscribers/{subscriberId}/devices": {
			"get": {
				"tags": [
					"Subscribers"
				],
				"summary": "List subscriber device statistics.",
				"description": "The device statistics have the following structure:\n  * **device_id**: string uuid, the ID of the device\n  * **display_name**: string, the name of the device\n  * **device_type**: string, the type of the device\n  * **device_os**: string, the operating system of the device\n  * **apps**: array, the list of Bitdefender applications installed on the device; each item in the array will have the following form:\n    * **app_id**: string, the ID of the application installed\n    * **version**: string, the version of the installed application\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					},
					{
						"$ref": "#/components/parameters/PageSize"
					},
					{
						"$ref": "#/components/parameters/Next"
					},
					{
						"$ref": "#/components/parameters/Previous"
					}
				],
				"responses": {
					"200": {
						"description": "List of subscriber device statistics.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"type": "number",
											"description": "The total number of devices of the subscriber."
										},
										"next": {
											"type": "string",
											"description": "Identifier associated with the last element in the page."
										},
										"previous": {
											"type": "string",
											"description": "Identifier associated with the first element in the page."
										},
										"devices": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"device_id": {
														"type": "string",
														"description": "The ID of the device."
													},
													"display_name": {
														"type": "string",
														"description": "The name of the device."
													},
													"device_type": {
														"type": "string",
														"description": "The device type."
													},
													"device_os": {
														"type": "string",
														"description": "The device OS."
													},
													"apps": {
														"type": "array",
														"description": "The array of apps for the device.",
														"items": {
															"type": "object",
															"properties": {
																"app_id": {
																	"type": "string",
																	"description": "The ID of the app."
																},
																"version": {
																	"type": "number",
																	"description": "The app version."
																}
															}
														}
													}
												}
											}
										}
									},
									"example": {
										"count": 1,
										"devices": [
											{
												"device_id": "d0a4efa6-5ee4-4803-910b-e7ceee7f2db7",
												"display_name": "New Device",
												"device_type": "unknown",
												"device_os": "unknown",
												"apps": [
													{
														"app_id": "com.bitdefender.cl",
														"version": "24.0.0.4"
													}
												]
											}
										],
										"previous": "5ef22c4ac35cf343e9c1aecc",
										"next": "5ef22c4ac35cf343e9c1aebc"
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/subscribers/{subscriberId}/logs": {
			"get": {
				"tags": [
					"Subscribers"
				],
				"summary": "List subscription logs.",
				"description": "Subscription logs list operations performed on a subscriber:  \n  * adding a new subscription\n  * removing a subscription\n  * suspending / resuming subscription\n\nThe logs have the following structure:\n  * **timestamp**: timestamp in milliseconds when action happened\n  * **action**: action performed (e.g _add_, _resume_, _remove_, etc.)\n  * **product_id**: product ID affected by the change (e.g what was removed, what was applied)\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					},
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/Limit"
					}
				],
				"responses": {
					"200": {
						"description": "List of subscription operations logs.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"type": "number"
										},
										"logs": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"organization_id": {
														"type": "string"
													},
													"timestamp": {
														"type": "number"
													},
													"action": {
														"type": "string"
													},
													"product_id": {
														"type": "string"
													}
												}
											}
										}
									},
									"example": {
										"count": 5,
										"logs": [
											{
												"organization_id": "dd2f6b72-6713-49c1-bd56-242d7040176e",
												"timestamp": 1550233766906,
												"action": "resume",
												"product_id": "msp-3d-3m"
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid subscribe state": {
										"value": {
											"error_id": "08d35161-5add-4c14-a125-ead4636776ff",
											"code": 677023,
											"message": "Cannot manage a subscriber with delete pending state",
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/subscribers/{subscriberId}/enrolUrl": {
			"post": {
				"tags": [
					"Subscribers"
				],
				"summary": "Create a new enrol URL for a subscriber",
				"description": "Generates a new enrol URL for a subscriber. This request will override the previous enrol URL. The enrolment URL will expire in 10 days.",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"send_invite": {
										"description": "Boolean flag to send the enrol URL to the subscriber via email. Providing this parameter with value `true` will trigger an error for organizations having `external` login type or for subscribers not having an email set.",
										"type": "boolean"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "New enrol URL",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"enrol_url": {
											"allOf": [
												{
													"$ref": "#/components/schemas/Subscriber/properties/enrol_url/properties/value"
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscriber is active": {
										"description": "The subscriber is active, meaning that enrolment process is completed, and a new enrolment URL cannot be generated",
										"value": {
											"error_id": "b8871838-49ef-4e07-9b6d-3860f5b28773",
											"code": 677012,
											"status": "error",
											"message": "Subscriber is active"
										}
									},
									"Cannot send invite email": {
										"description": "The enrolment link cannot be sent because the email address of the subscriber is not known. This error is usually returned when the subscriber is created using only `external_subscriber_id`.",
										"value": {
											"error_id": "c6c678d3-ebcf-4b4a-a6c9-38fea2ec00e0",
											"code": 677012,
											"status": "error",
											"message": "Cannot send invite email"
										}
									},
									"Subscriber already enrolled": {
										"description": "The subscriber completed the enrolment process but the MSP data is out of sync with the subscriber actual state. An operation to sync the data will be launched",
										"value": {
											"error_id": "73098341-db8b-476e-832c-b33a91d3805",
											"code": 677036,
											"status": "error",
											"message": "Subscriber already enrolled. Retrying subscription activation"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/subscribers/{subscriberId}/loginToken": {
			"post": {
				"tags": [
					"Subscribers"
				],
				"summary": "Generate a new login token for a subscriber",
				"description": "Generates a login token for a subscriber.",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"platform": {
										"description": "The platform for which the login token is generated. Can be one of `web`, `epaasandroid`, `epaasios`. For `epaasandroid` and `epaasios`, the `epaas` feature needs to be enabled on the organization managing the subscriber.",
										"type": "string",
										"enum": [
											"web",
											"epaasandroid",
											"epaasios"
										]
									}
								},
								"required": [
									"platform"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The login token",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"login_token": {
											"type": "string"
										}
									},
									"required": [
										"login_token"
									]
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"EPAAS not available": {
										"description": "The EPAAS feature is not available on the organization",
										"value": {
											"error_id": "737052af-3397-411f-8a43-2cba9cc30b8d",
											"code": 677046,
											"status": "error",
											"message": "The EPAAS feature is not available"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/subscribers/{subscriberId}/downloadLinks": {
			"post": {
				"tags": [
					"Subscribers"
				],
				"summary": "Generates download links for Bitdefender products",
				"description": "This API work only for organizations that have the `Share Link` feature enabled.\n\nCreate a download link for an application available in the subscription of a  subscriber. Any application installed through such a link will not require user authentication after install (the subscriber will automatically be authenticate in its account after installation; note that if the user logs out, the application will display the user login form). \n\nDownload links generated by this API are valid for 2 hours from the issuance timestamp. Additionally, there is a limit of 50 download links per subscriber in the last 45 days. Any link generated beyond this limit will automatically disable the auto-login capability (the user will no longer be automatically logged in and must use account credentials).\n\nIn order to use this API, the organization has to have access to the _share link_ feature (contact your MSP representative for more details).\n\nIf the share link feature is activated when your organization already has subscribers, then this API will work only for the activated subscribers and any new subscriber created after the feature was enabled. Using this API for a pending subscriber, created before the feature was activated, will result in an `External resource error`.\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/SubscriberId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"platform": {
										"description": "The platform for which the security application is downloaded.",
										"type": "string",
										"enum": [
											"windows",
											"osx",
											"android",
											"ios"
										]
									},
									"lang": {
										"description": "The language to be used by the application.",
										"type": "string",
										"enum": [
											"de_de",
											"en_au",
											"en_gb",
											"en_us",
											"fr_ca",
											"fr_fr",
											"nl_nl",
											"es_es",
											"it_it",
											"pt_br",
											"ro_ro",
											"pt_pt",
											"pl_pl",
											"ko_kr",
											"el_gr",
											"cs_cz",
											"vi_vn",
											"ar_sa",
											"ja_jp",
											"tr_tr",
											"th_th",
											"hu_hu",
											"ru_ru",
											"sv_se"
										]
									}
								},
								"required": [
									"lang",
									"platform"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "New download link",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"link": {
											"type": "string",
											"example": "https://flow.bitdefender.net/connect/2016/en_us/bitdefender_windows_140fbc63-e032-49be-a166-b765ca567ec3.exe"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Share link not enabled": {
										"description": "The plan of the organization does not have share_link property set to true.",
										"value": {
											"error_id": "b8871838-49ef-4e07-9b6d-3860f5b28773",
											"code": 677046,
											"status": "error",
											"message": "Share link feature is not enabled for this organization's plan"
										}
									},
									"Invalid login type": {
										"description": "The login type of the organization should be external SSO in order to have access to the share link feature.",
										"value": {
											"error_id": "c6c678d3-ebcf-4b4a-a6c9-38fea2ec00e0",
											"code": 677028,
											"status": "error",
											"message": "Share link feature is enabled only for organizations with external login type"
										}
									},
									"Platform not allowed": {
										"description": "The selected platform is not available in the subscription.",
										"value": {
											"error_id": "73098341-db8b-476e-832c-b33a91d3805",
											"code": 677047,
											"status": "error",
											"message": "Platform is not allowed"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/roles": {
			"get": {
				"tags": [
					"Roles"
				],
				"summary": "List roles and associated permissions",
				"description": "Roles in MSP represent sets of permissions over a set of resources. (e.g perform __GET__ on _/v1/roles_).\\\nThere are 5 default roles for each organization:\n  * **admin**;\n  * **integration\\_manager**;\n  * **auditor**;\n  * **reseller_admin**;\n  * **subscriber_manager**;\nResources are pairs consisting of an HTTP method and a route.\\\nEach role has a role ID and a role name.\\\nThe response consists in an array of objects with the following information:\n  * **role_name**: Role display name\n  * **role_id**: Role ID\n  * **default**: Is true for default roles\n  * **allows**: an array describing access permissions. Every resource has the following properties:\n      * **resources**: path to resource\n      * **permissions**: HTTP methods allowed.\n",
				"responses": {
					"200": {
						"description": "List of roles",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"allows": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"resources": {
															"type": "string"
														},
														"permissions": {
															"type": "array",
															"items": {
																"type": "string",
																"enum": [
																	"get",
																	"patch",
																	"post",
																	"delete"
																]
															}
														}
													}
												}
											},
											"role_id": {
												"type": "string"
											},
											"role_name": {
												"type": "string"
											},
											"last_updated": {
												"type": "number"
											}
										}
									}
								},
								"example": {
									"allows": [
										{
											"resources": "v1/organizations",
											"permissions": [
												"get",
												"post"
											]
										}
									],
									"role_id": "bdfaee1b-5ff6-44f0-8930-d88ff28bfdbc",
									"role_name": "Manager",
									"last_updated": 1550146484875
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Roles"
				],
				"summary": "Create a new role",
				"description": "Create a new role for the current organization. After creation, roles can be assigned to API Keys or business users.\\\nAt creation, the following parameters can be specified:\n* **role_name**: friendly name of the role\n* **allows**: an array describing access permissions. For each resource, must have the following properties:\n    * **resources**: path to resource\n    * **permissions**: HTTP methods allowed.\n\nReturns the newly created role ID.\n",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"role_name": {
										"type": "string"
									},
									"allows": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"permissions": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": [
															"get",
															"delete",
															"patch",
															"post"
														]
													}
												},
												"resources": {
													"type": "string"
												}
											},
											"required": [
												"permissions",
												"resources"
											]
										}
									}
								},
								"required": [
									"role_name"
								]
							},
							"example": {
								"role_name": "Engineering Manager",
								"allows": [
									{
										"resources": "/v1/organizations",
										"permissions": [
											"get"
										]
									},
									{
										"resources": "/v1/subscribers",
										"permissions": [
											"get",
											"patch"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Role created",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"role_id": {
											"type": "string",
											"example": "bdfaee1b-5ff6-44f0-8930-040ff28bfdbc"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Internal server error": {
										"value": {
											"error_id": "b3ddfe16-d374-47d7-b5a2-3430c970328e",
											"message": "Server error occurred",
											"code": 677009,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/roles/{roleId}": {
			"get": {
				"tags": [
					"Roles"
				],
				"summary": "List role properties",
				"parameters": [
					{
						"$ref": "#/components/parameters/RoleId"
					}
				],
				"description": "Get information about a role identified with roleId. Will return the following information:\n* **role_name**: Role display name\n* **role_id**: Role ID\n* **default**: Is true if it is a default role\n* **allows**: an array describing access permissions. Every resource has the following properties:\n    * **resources**: path to resource\n    * **permissions**: HTTP methods allowed.\n\nOnly works for custom roles.\n",
				"responses": {
					"200": {
						"description": "Role description.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"allows": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"resources": {
														"type": "string"
													},
													"permissions": {
														"type": "array",
														"items": {
															"type": "string",
															"enum": [
																"get",
																"patch",
																"post",
																"delete"
															]
														}
													}
												}
											}
										},
										"role_id": {
											"type": "string"
										},
										"role_name": {
											"type": "string"
										},
										"last_updated": {
											"type": "number"
										}
									}
								},
								"example": {
									"allows": [
										{
											"resources": "v1/organizations",
											"permissions": [
												"get",
												"post"
											]
										}
									],
									"role_id": "bdfaee1b-5ff6-44f0-8930-d88ff28bfdbc",
									"role_name": "Admin",
									"last_updated": 1550146484875
								}
							}
						}
					},
					"404": {
						"description": "Error in request parameters",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Role not found": {
										"value": {
											"error_id": "b3ddfe16-d374-47d7-b5a2-3430c970328e",
											"message": "Role not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Roles"
				],
				"summary": "Change role name or permissions.",
				"description": "Use this method to change a role's permissions or its display name.\\\nWhen modifying role permissions, request accepts an array called _allows_ containing permissions which will overwrite existing access rights. Accepts the following parameters:\n* **allows**: an array describing new access permissions. Contains objects with the following properties:\n    * **resources**: path to resource\n    * **permissions**: HTTP methods allowed.\n* **role_name**: new role name\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/RoleId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"role_name": {
										"type": "string"
									},
									"allows": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"resources": {
													"type": "string"
												},
												"permissions": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": [
															"get",
															"patch",
															"post",
															"delete"
														]
													}
												}
											},
											"required": [
												"resources",
												"permissions"
											]
										}
									}
								}
							},
							"example": {
								"role_name": "Manager",
								"allows": [
									{
										"resources": "/v1/organizations",
										"permissions": [
											"get",
											"patch"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully performed the operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": {
											"type": "number",
											"example": 0
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Error in request parameters",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid parameters": {
										"value": {
											"error_id": "02cd0ca8-9fc8-4338-8320-2b9d9238310c",
											"message": "Invalid parameters",
											"code": 677016,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Error in request parameters",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Role not found": {
										"value": {
											"error_id": "b3ddfe16-d374-47d7-b5a2-3430c970328e",
											"message": "Role not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Roles"
				],
				"summary": "Delete role",
				"description": "Removes a role from current organization.",
				"parameters": [
					{
						"$ref": "#/components/parameters/RoleId"
					}
				],
				"responses": {
					"200": {
						"description": "Successfully performed the operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": {
											"type": "number",
											"example": 0
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Error in request parameters",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Role not found": {
										"value": {
											"error_id": "b3ddfe16-d374-47d7-b5a2-3430c970328e",
											"message": "Role not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/roles/{roleId}/permissions": {
			"post": {
				"tags": [
					"Roles"
				],
				"summary": "Add new permission role.",
				"parameters": [
					{
						"$ref": "#/components/parameters/RoleId"
					}
				],
				"description": "Append a new permission to an existing role.\\\nRequest body must contain the following properties:\n  * **resource**: string, the path to resource\n  * **permissions**: array of strings, HTTP methods allowed for the resource\n",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"resource": {
										"type": "string"
									},
									"permissions": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"get",
												"post",
												"patch",
												"delete"
											]
										}
									}
								}
							},
							"example": {
								"resource": "/v1/organizations",
								"permissions": [
									"get",
									"post"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully performed the operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": {
											"type": "number",
											"example": 0
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid resource or method",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid parameters": {
										"value": {
											"error_id": "08e4d8c4-41f6-439e-9cbf-71adbe747981",
											"message": "Invalid parameters",
											"code": 677016,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Error in request parameters",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Role not found": {
										"value": {
											"error_id": "b3ddfe16-d374-47d7-b5a2-3430c970328e",
											"message": "Role not found",
											"status": "error",
											"code": 677013
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Roles"
				],
				"summary": "Remove permission from role.",
				"parameters": [
					{
						"name": "roleId",
						"in": "path",
						"description": "Role ID to change.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "resource",
						"in": "query",
						"description": "Resource to remove permission.",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "/v1/organizations"
					},
					{
						"name": "permissions",
						"in": "query",
						"description": "Method to deny access.",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"get",
									"post",
									"patch",
									"delete"
								]
							}
						},
						"example": "get"
					}
				],
				"description": "This method removes a permission from the role. Parameters __resource__ and __permissions__ are placed in query string.\n",
				"responses": {
					"200": {
						"description": "Successfully performed the operation.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"status": {
											"type": "number",
											"example": 0
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid resource or method",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid parameters": {
										"value": {
											"error_id": "08e4d8c4-41f6-439e-9cbf-71adbe747981",
											"message": "Invalid parameters",
											"code": 677016,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Error in request parameters",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Role not found": {
										"value": {
											"status": "error",
											"error_id": "b3ddfe16-d374-47d7-b5a2-3430c970328e",
											"message": "Role not found",
											"code": 677013
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/resources": {
			"get": {
				"tags": [
					"Resources"
				],
				"summary": "Lists all resources.",
				"description": "List all API resources which can be used for granting permissions.\\\nEach resource has the following properties:\n* **pretty_name**: friendly name displayed in interface\n* **resource**: API route to resource\n* **permissions**: array of strings of HTTP methods. Available values - _get_, _post_, _delete_, _patch_\n",
				"responses": {
					"200": {
						"description": "Existing routes and methods",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"pretty_name": {
												"type": "string"
											},
											"resource": {
												"type": "string"
											},
											"permissions": {
												"type": "array",
												"items": {
													"type": "string",
													"enum": [
														"get",
														"post",
														"patch",
														"delete"
													]
												}
											}
										}
									}
								},
								"example": [
									{
										"pretty_name": "Organizations",
										"resource": "/v1/organizations",
										"permissions": [
											"get",
											"post",
											"delete",
											"patch"
										]
									},
									{
										"pretty_name": "Business user roles",
										"resource": "/v1/roles",
										"permissions": [
											"get",
											"post",
											"delete",
											"patch"
										]
									}
								]
							}
						}
					}
				}
			}
		},
		"/v1/products": {
			"get": {
				"tags": [
					"Products"
				],
				"description": "Retrieve the list of products that the current organization is allowed to distribute",
				"summary": "List of products for the current organization.",
				"responses": {
					"200": {
						"$ref": "#/components/responses/ListOfProducts"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/OrganizationNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/reports": {
			"get": {
				"deprecated": true,
				"tags": [
					"Reports"
				],
				"summary": "Get usage reports",
				"description": "Get usage reports about the organization products.\\\nThere are 3 different types of reports:\n  * **subscribers**: subscriber reports offer information about number of subscribers. Contains an array of objects having the following properties:\n      * **date**: human readable date of the report\n      * **active**: number of active subscribers\n      * **pending**: number of subscribers who have not confirmed their account\n  * **products**: returns the usage count for every product, for each day. Each report is an object with parameters:\n      * **date**: date of report\n      * **product_idX**: how many subscribers had product with ID _product_idX_ at the day of the report\n\n      Reports will have multiple values, with one entry for each product.\n\n  * **expiry**: expiry reports contain number of expiring subscriptions for a certain day. Every report includes:\n      * **date**: date of report\n      * **product_idX**: how many subscribers had product with ID _product_idX_ expiring at the day of the report\n\nReports can be fetched for a number of days, named by parameter **days** with a start date obtained from parameter **start**. If parameters are missing, will return latest 7 reports.\n",
				"parameters": [
					{
						"name": "type",
						"required": true,
						"in": "query",
						"description": "Type of report to get.",
						"schema": {
							"type": "string",
							"enum": [
								"subscribers",
								"products",
								"expiry"
							]
						}
					},
					{
						"name": "start",
						"in": "query",
						"description": "Start date of reports (as timestamp).",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "days",
						"in": "query",
						"description": "Number of days to get reports for.",
						"schema": {
							"type": "number",
							"default": 7
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns an array of usage reports.",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/SubscriberStatistics"
										},
										{
											"$ref": "#/components/schemas/ProductsStatistics"
										}
									]
								},
								"examples": {
									"Subscriber Report": {
										"value": [
											{
												"date": "2019-02-22",
												"active": 10,
												"pending": 6
											},
											{
												"date": "2019-02-21",
												"active": 10,
												"pending": 6
											},
											{
												"date": "2019-02-20",
												"active": 10,
												"pending": 6
											},
											{
												"date": "2019-02-19",
												"active": 10,
												"pending": 6
											}
										]
									},
									"Product Report": {
										"value": [
											{
												"date": "2019-02-22",
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											},
											{
												"date": "2019-02-21",
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											},
											{
												"date": "2019-02-20",
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											},
											{
												"date": "2019-02-19",
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											}
										]
									},
									"Expiry report": {
										"value": {
											"2019-02-22": {
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											},
											"2019-02-2": {
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											},
											"2019-02-20": {
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											},
											"2019-02-19": {
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/statistics": {
			"get": {
				"tags": [
					"Statistics"
				],
				"summary": "Get statistics",
				"description": "Get report based on the type parameter. There are 5 different types of statistics:\n* **`subscribers`**\n* **`products`**\n* **`threat_count_weekly`**\n* **`threat_count_monthly`**\n* **`threat_ranking`**\n\nThe reports for **`threat_count_weekly`**, **`threat_count_monthly`** and **`threat_ranking`** are available only for organizations with the `Threats` feature enabled.\n",
				"parameters": [
					{
						"name": "type",
						"required": true,
						"in": "query",
						"description": "Type of report to get.",
						"schema": {
							"type": "string",
							"enum": [
								"subscribers",
								"products",
								"threat_count_weekly",
								"threat_count_monthly",
								"threat_ranking"
							]
						}
					},
					{
						"name": "count",
						"required": true,
						"in": "query",
						"description": "Number of samples to be retrieved.\\\nFor `subscribers` and `products` statistics, it specifies the number of days for which statistics are retrieved. For `threat_count_weekly` and `threat_ranking`, it specifies the number of weeks and for `threat_count_monthly`, the number of months. Restrictions:\n  * **`subscribers`, `products`**: between 7 and 30 (retrieve between 7 and 30 days worth of statistics)\n  * **`threat_count_weekly`, `threat_ranking`**:  between 4 and 12 (retrieve between 1 and 3 months worth of statistics)\n  * **`threat_count_monthly`**: between 1 and 6 (retrieve between 1 and 6 months worth of statistics)\n",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns an array of statistics",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/SubscriberStatistics"
										},
										{
											"$ref": "#/components/schemas/ProductsStatistics"
										},
										{
											"$ref": "#/components/schemas/ThreatCountWeeklyStatistics"
										},
										{
											"$ref": "#/components/schemas/ThreatCountMonthlyStatistics"
										},
										{
											"$ref": "#/components/schemas/ThreatRankingStatistics"
										}
									]
								},
								"examples": {
									"Subscriber Statistics": {
										"value": [
											{
												"date": "2019-02-22",
												"active": 10,
												"pending": 6
											},
											{
												"date": "2019-02-21",
												"active": 10,
												"pending": 6
											},
											{
												"date": "2019-02-20",
												"active": 10,
												"pending": 6
											},
											{
												"date": "2019-02-19",
												"active": 10,
												"pending": 6
											}
										]
									},
									"Product Statistics": {
										"value": [
											{
												"date": "2019-02-22",
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											},
											{
												"date": "2019-02-21",
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											},
											{
												"date": "2019-02-20",
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											},
											{
												"date": "2019-02-19",
												"msp-0": 1,
												"msp-10d": 1,
												"msp-10d-3m": 2,
												"msp-1d": 1,
												"msp-3d": 1,
												"msp-3d-3m": 0,
												"msp-5d-3m": 2
											}
										]
									},
									"Threat Count Weekly Statistics": {
										"value": [
											{
												"date": "2020-34",
												"from_date": "2020-08-17",
												"to_date": "2020-08-23",
												"malware": 430,
												"phishing": 1002
											}
										]
									},
									"Threat Count Monthly Statistics": {
										"value": [
											{
												"date": "2020-08",
												"from_date": "2020-08-01",
												"to_date": "2020-08-31",
												"malware": 1200,
												"phishing": 5860,
												"ransomware": 2,
												"fraud": 200
											}
										]
									},
									"Threat Ranking Statistics": {
										"value": [
											{
												"date": "2020-34",
												"from_date": "2020-08-17",
												"to_date": "2020-08-23",
												"threats": [
													{
														"threat": "https://blinkjork.com/214f104573d95d95ba.js",
														"occurrences": 430
													},
													{
														"threat": "https://netflixplan.net/",
														"occurrences": 1002
													}
												]
											}
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/logs": {
			"get": {
				"tags": [
					"Logs"
				],
				"summary": "Retrieve access and activity logs",
				"description": "List the logs for your organization. There are two types of logs:\n  * _**activity logs**_ - each log contains a change made for your organization by a business user or by an API key\n  * _**access logs**_ - each logs shows successful login attempts of the business users that manage your organization.\n",
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"required": true,
						"description": "The type of logs to retrieve.",
						"schema": {
							"type": "string",
							"enum": [
								"access",
								"activity"
							]
						}
					},
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/Limit"
					},
					{
						"name": "from",
						"in": "query",
						"description": "The beginning of time period desired to view the logs",
						"schema": {
							"$ref": "#/components/schemas/Timestamp"
						}
					},
					{
						"name": "to",
						"in": "query",
						"description": "The ending of time period desired to view the logs",
						"schema": {
							"$ref": "#/components/schemas/Timestamp"
						}
					},
					{
						"name": "user_id",
						"in": "query",
						"description": "The ID of the business user that appears in logs. Only the logs having the specified user ID will be returned.\nStarting with may 2022, user_id contains the email of the business user in case of activity logs and user_id for access logs\n",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "api_key",
						"in": "query",
						"description": "The API key that appears in the activity logs. Only the logs where the API key specified was user will be returned",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List of access logs",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"$ref": "#/components/schemas/QueryCount"
										},
										"logs": {
											"type": "array",
											"items": {
												"oneOf": [
													{
														"$ref": "#/components/schemas/ActivityLog"
													},
													{
														"$ref": "#/components/schemas/AccessLog"
													}
												]
											}
										}
									}
								},
								"examples": {
									"Activity logs": {
										"value": {
											"count": 1,
											"logs": [
												{
													"timestamp": 1574420320000,
													"access_type": "apikey",
													"identifier": "cf4ea7dc-a7df-449c-820a-bc638d4d9f88",
													"resource": "v1/businessUsers",
													"method": "POST",
													"params": {
														"email": "user@bitdefender.com"
													},
													"response": {
														"user_id": "19330632-b442-4042-9cf9-930e30703196"
													},
													"ip": "127.0.0.1",
													"user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0"
												}
											]
										}
									},
									"Access logs": {
										"value": {
											"count": 1,
											"logs": [
												{
													"timestamp": 1574420320000,
													"user_id": "6f159af9-b26e-490d-9900-962feb850094",
													"ip": "127.0.0.1",
													"user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0"
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/gdpr": {
			"get": {
				"tags": [
					"GDPR"
				],
				"summary": "List GDPR requests",
				"description": "List GDPR requests performed for current organizations. Requests are paginated, and parameter **page** is mandatory.\\\nCan be filtered using:\n  * **state**: see requests with a specific status.\n\nEach request will contain only one of the following subscriber identifier parameters (the used on the create GDPR request):\n  * `email`\n  * `phone`\n  * `username`\n  * `external_subscriber_id`\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/Limit"
					},
					{
						"name": "state",
						"description": "Filter by request status.",
						"schema": {
							"type": "string",
							"enum": [
								"pending",
								"success",
								"failed"
							]
						},
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Latest GDPR reports.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"type": "number",
											"description": "Total number of entries for these filters"
										},
										"values": {
											"type": "object",
											"description": "List of GDPR request",
											"properties": {
												"request_id": {
													"allOf": [
														{
															"$ref": "#/components/schemas/MspEntityId"
														},
														{
															"description": "The ID of the GDPR request",
															"example": "41b543dc-ea36-4c1c-a171-222df431bce9"
														}
													]
												},
												"organization_id": {
													"allOf": [
														{
															"$ref": "#/components/schemas/Organization/properties/organization_id"
														}
													]
												},
												"state": {
													"description": "The status of the request. It can have the following values:\n* `pending` - the request is yet to be executed.\n* `success` - the request was successfully executed.\n* `failed`  - an irrecoverable error has occurred while running th request.\n",
													"type": "string",
													"enum": [
														"pending",
														"success",
														"failed"
													]
												},
												"external_subscriber_id": {
													"allOf": [
														{
															"$ref": "#/components/schemas/Subscriber/properties/external_subscriber_id"
														}
													]
												},
												"email": {
													"allOf": [
														{
															"$ref": "#/components/schemas/Subscriber/properties/email"
														}
													]
												},
												"phone": {
													"allOf": [
														{
															"$ref": "#/components/schemas/Subscriber/properties/phone"
														}
													]
												},
												"username": {
													"allOf": [
														{
															"$ref": "#/components/schemas/Subscriber/properties/username"
														}
													]
												}
											}
										}
									},
									"example": {
										"count": 2,
										"values": [
											{
												"request_id": "5c9d0d0f-33da-4da7-9e57-793c86442ba2",
												"external_subscriber_id": "72fc3c3d-84fc-4909-8797-6ae99f86c4c4",
												"organization_id": "7464eab7-6b29-4fd6-82a2-e40d6264a440",
												"state": "success"
											},
											{
												"email": "subscriber@email.com",
												"organization_id": "7464eab7-6b29-4fd6-82a2-e40d6264a440",
												"state": "pending",
												"request_id": "9bdcaaf3-c2d2-4c48-ab40-a5a737ba9b82"
											}
										]
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					}
				}
			},
			"post": {
				"tags": [
					"GDPR"
				],
				"summary": "Create GDPR request",
				"description": "A GDPR deletion request will completely wipe data about a removed subscriber from Bitdefender Database. If the subscriber is not removed (a subscriber not found error is returned), then the subscriber must be removed first.\\\nThe GDPR request can removed the subscriber data using one of the following subscriber identifiers:\n* `email`\n* `phone`\n* `username`\n* `external_subscriber_id`\n",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"type": "object",
										"properties": {
											"external_subscriber_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/external_subscriber_id"
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"email": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/email"
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"phone": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/phone"
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"username": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Subscriber/properties/username"
													}
												]
											}
										}
									}
								]
							},
							"example": {
								"email": "subscriber@email.com"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"request_id": {
											"allOf": [
												{
													"$ref": "#/components/schemas/MspEntityId"
												},
												{
													"description": "The ID of the GDPR request",
													"example": "41b543dc-ea36-4c1c-a171-222df431bce9"
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/SubscriberNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Subscriber is not removed": {
										"value": {
											"error_id": "25e42568-d674-4406-92a7-f3f32799c25d",
											"code": 677012,
											"status": "error",
											"message": "Subscriber is active"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					}
				}
			}
		},
		"/v1/gdpr/{request_id}": {
			"delete": {
				"tags": [
					"GDPR"
				],
				"summary": "Delete GDPR request",
				"description": "Delete a previously created GDPR deletion request. It will disappear from the GDPR logs.\n",
				"parameters": [
					{
						"name": "request_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "41b543dc-ea36-4c1c-a171-222df431bce9"
						},
						"description": "String identifying GDPR delete request."
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Request not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"example": {
									"error_id": "86a3308c-e60b-4ea2-98e4-da90232b5323",
									"message": "Request not found",
									"code": 677013,
									"status": "error"
								}
							}
						}
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"example": {
									"error_id": "dc488026-9f94-425a-aadf-f14dc75f3eb6",
									"message": "Cannot remove a pending request",
									"code": 677012,
									"status": "error"
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					}
				}
			}
		},
		"/v1/tasks": {
			"get": {
				"summary": "Get a list of tasks",
				"tags": [
					"Tasks"
				],
				"parameters": [
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/Limit"
					}
				],
				"description": "Obtain a list of most recent tasks for current organization. The tasks are sorted in descending order after the `last_updated` property.",
				"responses": {
					"200": {
						"description": "Return an array with latest tasks and their status",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"$ref": "#/components/schemas/QueryCount"
										},
										"tasks": {
											"type": "array",
											"description": "The list of tasks.",
											"items": {
												"type": "object",
												"properties": {
													"task_id": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Task/properties/task_id"
															}
														]
													},
													"task_name": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Task/properties/task_name"
															}
														]
													},
													"task_params": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Task/properties/task_params"
															}
														]
													},
													"result": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Task/properties/result"
															}
														]
													},
													"status": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Task/properties/status"
															}
														]
													},
													"last_updated": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Task/properties/last_updated"
															}
														]
													},
													"created": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Task/properties/created"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"post": {
				"summary": "Publish a new task",
				"description": "Create a new task to be executed. Creating a task does not imply that the task will be executed immediately. If there is a task that is already running, the task will in remain in status `pending` until the existing tasks are executed.\n\nFor the following tasks `install_stats` must be enabled:\n  * `device-export`\n\nFor the subscriptions tasks that use a query_hash parameter, the tasks will be performed for a limited number of subscriptions. These tasks are:\n  * `add-subscription`\n  * `remove-subscription`\n  * `suspend-subscription`\n  * `resume-subscription`\n  * `remove-subscribers`\n  * `replace-product`\n\nCreating a task that involves actions on subscribers which have the state `delete_pending`, these specific entries of the working set will be ignored.\n",
				"tags": [
					"Tasks"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"task_name": {
										"allOf": [
											{
												"$ref": "#/components/schemas/Task/properties/task_name"
											}
										]
									},
									"task_params": {
										"oneOf": [
											{
												"allOf": [
													{
														"description": "Parameters for `*-subscription` tasks"
													},
													{
														"$ref": "#/components/schemas/SubscriptionTaskParams"
													},
													{
														"properties": {
															"product_id": {
																"$ref": "#/components/schemas/ProductId"
															}
														},
														"required": [
															"product_id"
														]
													}
												]
											},
											{
												"allOf": [
													{
														"description": "Parameters for `replace-product` tasks"
													},
													{
														"$ref": "#/components/schemas/SubscriptionTaskParams"
													},
													{
														"properties": {
															"old_product_id": {
																"$ref": "#/components/schemas/ProductId"
															},
															"new_product_id": {
																"$ref": "#/components/schemas/ProductId"
															}
														},
														"required": [
															"old_product_id",
															"new_product_id"
														]
													}
												]
											},
											{
												"allOf": [
													{
														"description": "Parameters for the `usage-report` tasks"
													},
													{
														"$ref": "#/components/schemas/UsageReportTaskParams"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "Parameters for the `batch-enrolment` tasks"
													},
													{
														"$ref": "#/components/schemas/BatchEnrolTaskParams"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "Parameters for the `remove-subscribers` tasks"
													},
													{
														"$ref": "#/components/schemas/SubscriptionTaskParams"
													}
												]
											}
										],
										"example": {
											"organization_id": "3956cf1b-aff9-427c-9a80-cc826ce7d1b2",
											"month": 1
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Task created.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"task_id": {
											"allOf": [
												{
													"$ref": "#/components/schemas/Task/properties/task_id"
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Organization not found": {
										"$ref": "#/components/examples/OrganizationNotFoundError"
									},
									"Query not found": {
										"$ref": "#/components/examples/QueryNotFoundError"
									}
								}
							}
						}
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Similar task exists": {
										"$ref": "#/components/examples/SimilarTaskError"
									},
									"Invalid report period": {
										"$ref": "#/components/examples/InvalidPeriodError"
									},
									"Product is suspended": {
										"$ref": "#/components/examples/ProductSuspendedError"
									},
									"Product not owned": {
										"$ref": "#/components/examples/ProductNotFoundError"
									},
									"Invalid query hash": {
										"$ref": "#/components/examples/InvalidQueryError"
									},
									"Incomplete organization contact": {
										"$ref": "#/components/examples/InvalidContactError"
									},
									"Invalid organization type": {
										"$ref": "#/components/examples/InvalidTypeError"
									},
									"Incomplete login type": {
										"$ref": "#/components/examples/InvalidLoginError"
									},
									"Subscriber limit exceeded": {
										"$ref": "#/components/examples/LimitExceededError"
									},
									"Install statistics is disabled": {
										"$ref": "#/components/examples/InstallStatisticsDisabled"
									},
									"Device export generated": {
										"$ref": "#/components/examples/DeviceExportGenerated"
									},
									"Missing EPAAS webhook": {
										"$ref": "#/components/examples/MissingEpaasWebhook"
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/tasks/{taskId}": {
			"get": {
				"summary": "Get task info",
				"description": "Obtain detailed information about a task, such as the number of operations, the task progress or the task result.",
				"parameters": [
					{
						"$ref": "#/components/parameters/TaskId"
					}
				],
				"tags": [
					"Tasks"
				],
				"responses": {
					"200": {
						"description": "Information about task",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Task"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/TaskNotFound"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"patch": {
				"tags": [
					"Tasks"
				],
				"summary": "Cancel a task",
				"description": "Cancel a task that is not completed yet. Be aware that by canceling a task only the remaining operations will not be executed. The completed operations will not be reverted and their modifications will still be visible. A running batch-enrolment task cannot be canceled!",
				"parameters": [
					{
						"$ref": "#/components/parameters/TaskId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/TaskNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Non cancelable task": {
										"$ref": "#/components/examples/NonCancelableTaskError"
									},
									"Non cancelable batch-enrolment task": {
										"value": {
											"error_id": "246b1922-3e7d-4acc-94b0-766cacc71f51",
											"code": 677012,
											"status": "error",
											"message": "You cannot cancel a running batch enrolment task"
										}
									},
									"Non cancelable device-export task": {
										"value": {
											"error_id": "246b1922-3e7d-4acc-94b0-766cacc71f51",
											"code": 677012,
											"status": "error",
											"message": "You cannot cancel a running device export task"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"Tasks"
				],
				"summary": "Delete a task",
				"description": "Use this method to permanently remove a task identified by *task_id* from database. A task can be cancelled irrespective of its status. If task is running, any remaining operations will not be executed after task deletion.",
				"parameters": [
					{
						"$ref": "#/components/parameters/TaskId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"$ref": "#/components/responses/TaskNotFound"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Non deletable device-export task": {
										"value": {
											"error_id": "246b1922-3e7d-4acc-94b0-766cacc71f51",
											"code": 677012,
											"status": "error",
											"message": "You cannot delete a device export task"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/policies": {
			"get": {
				"summary": "List organization policies",
				"tags": [
					"Policies"
				],
				"description": "List all policies of an organization. Policies are sets of rules that apply to all subscribers. \\\nA policy can be either *blacklist* or *whitelist*. URLs in a blacklist cannot be accessed by the subscribers of the organization by any means, while any whitelisted URLs cannot be restricted by any means. \\\nPolicies categories available:\n* URL\nEach category of policies can contain only one blacklist and only one whitelist. Both can exist at the same time.\n",
				"responses": {
					"200": {
						"description": "All organization's policies.",
						"content": {
							"application/json": {
								"schema": {
									"description": "The list of policies",
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"type": {
												"description": "The type of policy:\n* `whitelist` - the access to the items in the list cannot be restricted by any means\n* `blacklist` - the access to the items in the list cannot be allowed by any means\n",
												"type": "string",
												"enum": [
													"whitelist",
													"blacklist"
												]
											},
											"name": {
												"description": "The category of the policy:\n* `URL` - web resources\n",
												"type": "string",
												"enum": [
													"URL"
												]
											},
											"rules": {
												"description": "The list of items targeted by the policy",
												"type": "array",
												"items": {
													"type": "object",
													"oneOf": [
														{
															"description": "URL rules",
															"properties": {
																"value": {
																	"type": "string",
																	"minLength": 1,
																	"maxLength": 255,
																	"format": "uri"
																}
															}
														}
													]
												}
											},
											"created": {
												"allOf": [
													{
														"description": "The timestamp when the policy was created"
													},
													{
														"$ref": "#/components/schemas/Timestamp"
													}
												]
											},
											"last_updated": {
												"allOf": [
													{
														"description": "The timestamp when the policy was last updated"
													},
													{
														"$ref": "#/components/schemas/Timestamp"
													}
												]
											},
											"id": {
												"allOf": [
													{
														"description": "The ID of the policy"
													},
													{
														"$ref": "#/components/schemas/MspEntityId"
													}
												]
											}
										}
									}
								},
								"example": [
									{
										"type": "whitelist",
										"name": "URL",
										"rules": [
											{
												"value": "https://www.example.com"
											}
										],
										"created": 1561637945935,
										"last_updated": 1562318321805,
										"version": "0.1.18",
										"id": "b48f1c82-ef2f-460c-89d4-c4df40da2767"
									},
									{
										"name": "URL",
										"type": "blacklist",
										"rules": [
											{
												"value": "https://freemspcodes.com"
											}
										],
										"created": 1562158303353,
										"last_updated": 1562158303353,
										"version": "0.1.0",
										"id": "622d9eb5-ca86-47f3-803a-0d908e8e940e"
									}
								]
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidBearerCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"description": "Errors occurred while retrieving policies",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Error on retrieve policies": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "Error on retrieve policies",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new policy",
				"tags": [
					"Policies"
				],
				"description": "Create a new policy for the current organization.",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"description": "The type of policy:\n* `whitelist` - the access to the items in the list cannot be restricted by any means\n* `blacklist` - the access to the items in the list cannot be allowed by any means\n",
										"type": "string",
										"enum": [
											"whitelist",
											"blacklist"
										]
									},
									"name": {
										"description": "The category of the policy:\n* `URL` - web resources\n",
										"type": "string",
										"enum": [
											"URL"
										]
									}
								}
							},
							"example": {
								"type": "blacklist",
								"name": "URL"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Policy added",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"policy_id": {
											"type": "string",
											"example": "622d9eb5-ca86-47f3-803a-0d908e8e940e"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidBearerCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"description": "Errors occurred while adding a policy",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Error on add policy": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "Error on add policy",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/policies/{policyId}": {
			"delete": {
				"tags": [
					"Policies"
				],
				"summary": "Delete a policy",
				"description": "Delete a policy identified by its ID, for the current organization. All the rules associated with the policy will also be deleted completely.",
				"parameters": [
					{
						"$ref": "#/components/parameters/PolicyId"
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidBearerCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"description": "Errors occurred while deleting a policy",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Error on remove policy": {
										"value": {
											"error_id": "aff2af36-9e1b-435d-b8ca-56c7dcb20851",
											"message": "Error on remove policy",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Policies"
				],
				"summary": "Add or remove policy rules.",
				"description": "Rules can be added or removed from an existing policy using its policy_id. Type of operation is indicated by parameter `action`.",
				"parameters": [
					{
						"$ref": "#/components/parameters/PolicyId"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"rule": {
										"description": "The rule to be modified",
										"type": "array",
										"items": {
											"type": "object",
											"oneOf": [
												{
													"description": "URL rule",
													"properties": {
														"value": {
															"type": "string",
															"minLength": 1,
															"maxLength": 255,
															"format": "uri"
														}
													}
												}
											]
										}
									},
									"action": {
										"description": "The type of the update operation:\n* `add` - add the rule to the policy\n* `remove` - remove the rule form the policy\n",
										"type": "string",
										"enum": [
											"add",
											"remove"
										]
									}
								},
								"required": [
									"rule",
									"action"
								]
							},
							"example": {
								"rule": {
									"value": "http://www.example.com"
								},
								"action": "remove"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidBearerCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"description": "Errors occurred while updating a policy",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Error on modify policy": {
										"value": {
											"message": "Error on modify policy",
											"error_id": "f6225378-99c6-4414-b63f-5c0bef0bfdb9",
											"code": 677010,
											"status": "error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/me": {
			"get": {
				"security": [
					{
						"BearerToken": []
					}
				],
				"tags": [
					"Business users"
				],
				"summary": "Get the email of the current business user.",
				"description": "Retrieve the email address of the current business user (the business user identified by the Bearer token used to authorize the request).  This API can be called only using a Bearer token. The ApiKey authenticated calls will receive an authentication error.",
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"email": {
											"type": "string"
										}
									}
								},
								"example": {
									"email": "user@bitdefender.com"
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidBearerCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/me/organizations": {
			"get": {
				"security": [
					{
						"BearerToken": []
					}
				],
				"tags": [
					"Business users"
				],
				"summary": "List the organizations that the current business user can manage.",
				"description": "List the organizations that the current business user (the business user identified by the Bearer token used to authorize the request) can manage. This API can be called only using a Bearer token. The ApiKey authenticated calls will receive an authentication error.",
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"created": {
												"type": "number"
											},
											"last_updated": {
												"type": "number"
											},
											"organization_label": {
												"type": "string"
											},
											"organization_name": {
												"type": "string"
											},
											"organization_type": {
												"type": "string"
											},
											"parent_id": {
												"type": "string"
											},
											"suspended": {
												"type": "string"
											},
											"organization_id": {
												"type": "string"
											},
											"plan": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"organization_id": "4220f98a-223f-4e0e-a4be-a66598dfa767",
										"parent_id": "dd2f6b72-6713-49c1-bd56-242d7040176e",
										"organization_name": "Romero Inc",
										"organization_label": "Romero",
										"organization_type": "operator",
										"suspended": false,
										"created": 1559131893000,
										"last_updated": 1566465817630
									},
									{
										"organization_id": "aee3636c-ac38-4166-b8b3-566b37241cb9",
										"parent_id": "4220f98a-223f-4e0e-a4be-a66598dfa767",
										"organization_name": "Golvin",
										"organization_label": "Golvin Distribution",
										"organization_type": "distributor",
										"suspended": false,
										"created": 1559559584000,
										"last_updated": 1562682935278
									}
								]
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidBearerCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/agreements": {
			"post": {
				"summary": "Submit new terms of service agreement",
				"security": [
					{
						"BearerToken": []
					},
					{
						"X-Organization-Id": []
					}
				],
				"tags": [
					"ToS Agreements"
				],
				"description": "Submit new terms of service (ToS) agreement by reporting the version of the ToS accepted. When the agreement is reported, a log will be stored having the following structure:\n  * **ip** - the IP of the request;\n  * **user_id** - the ID of the business user that agreed with the terms of service;\n  * **organization_id** - the ID of the organization for which the business user accepted the ToS;\n  * **timestamp** - millisecond timestamp of the request;\\\n\nThis API can be called using the only Bearer authentication.\n",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"accepted_version": {
										"description": "The version of ToS agreed by the business user",
										"type": "string"
									}
								}
							},
							"example": {
								"accepted_version": "1.0.3"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidBearerCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"409": {
						"description": "Processing error due to violations of API restrictions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"Invalid tos version": {
										"value": {
											"error_id": "59b439e2-e0e4-4e41-8342-5dc592a67d18",
											"code": 677016,
											"status": "error",
											"message": "Cannot accept this version"
										}
									},
									"Already accepted version": {
										"value": {
											"error_id": "9f6c3620-546d-4408-8bc6-228c8ae45190",
											"code": 677011,
											"status": "error",
											"message": "Version already accepted"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/usageReports": {
			"get": {
				"summary": "Get a list of usage reports",
				"tags": [
					"Usage reports"
				],
				"parameters": [
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/Limit"
					}
				],
				"description": "List the usage reports generated for the current organization by the parent organization. If the the parent organization does not generates the usage reports then this API will have no information to return.",
				"responses": {
					"200": {
						"description": "List of usage reports, sorted newest first",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"type": "number",
											"description": "The number of available reports",
											"example": 1
										},
										"reports": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"created": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Timestamp"
															},
															{
																"description": "The timestamp when the report was generated"
															}
														]
													},
													"file_id": {
														"allOf": [
															{
																"$ref": "#/components/schemas/MspEntityId"
															},
															{
																"example": "be2c8ca1-1406-4e83-8ae1-336caf4e16d6",
																"description": "The ID of usage report in the file storage"
															}
														]
													},
													"from_date": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Timestamp"
															},
															{
																"description": "The timestamp at the beginning of the report period"
															}
														]
													},
													"to_date": {
														"allOf": [
															{
																"$ref": "#/components/schemas/Timestamp"
															},
															{
																"description": "The timestamp at the end of the report period"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/changelogs": {
			"get": {
				"tags": [
					"Changelogs"
				],
				"summary": "Lists changelogs for MSP platform",
				"description": "List the changes occurred to the MSP platform, containing details about the changed components and the impact of the change. Note that api_version and ui_version do not depend on the filters that are applied, so they will return the latest versions that exists in the database.",
				"parameters": [
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/Limit"
					},
					{
						"name": "tags",
						"required": false,
						"in": "query",
						"description": "The tag that indicates what part of the platform has been updated",
						"schema": {
							"type": "string",
							"example": "msp-api"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"type": "number",
											"description": "Total number of changelogs retrieved",
											"example": 1
										},
										"api_version": {
											"type": "string",
											"description": "The latest API version that exists in the database",
											"example": "1.0.3"
										},
										"ui_version": {
											"type": "string",
											"description": "The latest UI version that exists in the database",
											"example": "1.0.3"
										},
										"changelogs": {
											"type": "array",
											"description": "List of changelogs",
											"items": {
												"$ref": "#/components/schemas/Changelog"
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissionsWithoutRoles"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/storage": {
			"post": {
				"tags": [
					"Storage"
				],
				"summary": "Upload file",
				"description": "Creates an URI for uploading a file in Katastif.\n",
				"requestBody": {
					"description": "JSON containing details about the file.",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"md5": {
										"type": "string",
										"example": "1f2414c23a7d55dddc11caa32a8e9a4a",
										"description": "MD5 of the file, this field will be checked with the uploaded file for consistency"
									},
									"file_size": {
										"type": "integer",
										"minimum": 1,
										"maximum": 104857600,
										"example": 253947,
										"description": "File size in bytes"
									},
									"content_type": {
										"type": "string",
										"enum": [
											"application/json",
											"text/csv",
											"image/png",
											"image/jpeg"
										],
										"example": "image/jpeg"
									},
									"file_name": {
										"type": "string",
										"example": "picture.jpg"
									}
								},
								"required": [
									"md5",
									"file_size",
									"content_type"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns file id and and uri for uploading the file in Katastif",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "58199755-edcd-4f93-af1a-ff475795d453",
											"description": "File ID, will be used for downloading the file"
										},
										"url": {
											"type": "string",
											"example": "https://example.com?token=1fsd2ewfw2",
											"description": "URL for upload"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		},
		"/v1/storage/{fileId}": {
			"get": {
				"tags": [
					"Storage"
				],
				"summary": "Download file",
				"description": "Get detailed information about a file hosted in Katastif and a URL for downloading the file\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/FileId"
					},
					{
						"$ref": "#/components/parameters/ContentType"
					}
				],
				"responses": {
					"200": {
						"description": "Returns file information and an uri from where file can be downloaded",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"example": "c22ca739-a9f7-4cef-8ea9-f4c702e10eec"
										},
										"file_size": {
											"type": "integer",
											"example": 34312
										},
										"md5": {
											"type": "string",
											"example": "AAF36C73D062A7BD37847C010E2B9893"
										},
										"content_type": {
											"type": "string",
											"example": "image/jpeg"
										},
										"uri": {
											"type": "string",
											"example": "https://example.com?token=321rewfsd32d"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"File not found": {
										"value": {
											"error_id": "0181d42b-ab18-42c6-b8cd-0446fb502885",
											"message": "File not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			},
			"delete": {
				"tags": [
					"Storage"
				],
				"summary": "Remove file",
				"description": "Removes a file hosted in Katastif\n",
				"parameters": [
					{
						"$ref": "#/components/parameters/FileId"
					},
					{
						"name": "content_type",
						"description": "Content type for the file",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"image/png",
								"image/jpeg"
							]
						}
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/GenericSuccess"
					},
					"400": {
						"$ref": "#/components/responses/InvalidParameters"
					},
					"401": {
						"$ref": "#/components/responses/InvalidCredentials"
					},
					"403": {
						"$ref": "#/components/responses/InsufficientPermissions"
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								},
								"examples": {
									"File not found": {
										"value": {
											"error_id": "0181d42b-ab18-42c6-b8cd-0446fb502885",
											"message": "File not found",
											"code": 677013,
											"status": "error"
										}
									}
								}
							}
						}
					},
					"429": {
						"$ref": "#/components/responses/RateLimitExceeded"
					},
					"500": {
						"$ref": "#/components/responses/ServerError"
					}
				}
			}
		}
	},
	"components": {
		"parameters": {
			"EventTopic": {
				"name": "eventTopic",
				"in": "path",
				"description": "The topic on which the API call will be made",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/EventTopic"
				}
			},
			"OrganizationId": {
				"name": "organizationId",
				"in": "path",
				"description": "The ID for organization on which the API call will be made",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"ProductId": {
				"name": "productId",
				"in": "path",
				"description": "The ID of the targeted product",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"UserId": {
				"name": "userId",
				"in": "path",
				"description": "The ID of the targeted business user",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"KeyId": {
				"name": "keyId",
				"in": "path",
				"description": "The ID of the targeted API key",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"ClientId": {
				"name": "clientId",
				"in": "path",
				"description": "The ID of the targeted Client Credentials",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"SubscriberId": {
				"name": "subscriberId",
				"in": "path",
				"description": "The ID of the targeted subscriber. Here the `external_subscriber_id` information set upon creation can be used for subscriber identification.",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"SubscriptionId": {
				"name": "subscriptionId",
				"in": "path",
				"description": "The ID of the targeted subscription",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"RoleId": {
				"name": "roleId",
				"in": "path",
				"description": "The ID of the role retrieved/modified",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"TaskId": {
				"name": "taskId",
				"in": "path",
				"description": "The ID of the targeted task",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"PolicyId": {
				"name": "policyId",
				"in": "path",
				"description": "The ID of the policy modified",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"Page": {
				"name": "page",
				"description": "The number of pages of elements to skip before returning the desired elements. The number is computed using the following formula: `page * limit`, where **limit** is the `limit` parameter\n",
				"in": "query",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/Page"
				}
			},
			"PageSize": {
				"name": "page_size",
				"description": "The number of elements per page, minimum 5 and maximum 30.\n",
				"in": "query",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/Limit"
				}
			},
			"Limit": {
				"name": "limit",
				"description": "The number of elements per page. This parameter also influences the number of elements skipped through the following formula: `page * limit`, where **page** is the `page` parameter\n",
				"in": "query",
				"required": false,
				"schema": {
					"$ref": "#/components/schemas/Limit"
				}
			},
			"Previous": {
				"name": "previous",
				"description": "An identifier associated with the first element in the page, that is used the pagination marker. It is received in a previous request used to request the previous page of elements\n",
				"in": "query",
				"required": false,
				"schema": {
					"type": "string"
				}
			},
			"Next": {
				"name": "next",
				"description": "An identifier associated with the last element in the page, that is used as a pagination marker. It is received in a previous request used to request the next page of elements\n",
				"in": "query",
				"required": false,
				"schema": {
					"type": "string"
				}
			},
			"FileId": {
				"name": "fileId",
				"in": "path",
				"description": "The ID of the file",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/MspEntityId"
				}
			},
			"ContentType": {
				"name": "content_type",
				"description": "Content type for the file",
				"in": "query",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/FileContent"
				}
			}
		},
		"examples": {
			"ServerError": {
				"summary": "Server error occurred due to unavailable resource",
				"value": {
					"error_id": "994e2617-3d31-489f-8458-cbcedb7042e9",
					"code": 677009,
					"status": "error",
					"message": "Server error occurred"
				}
			},
			"ExternalApiError": {
				"summary": "External api error occurred due to unavailable external api",
				"value": {
					"error_id": "b07a51a8-cc5a-4cc4-b956-a8cfa38508bf",
					"code": 677010,
					"status": "error",
					"message": "Error occurred while processing the request"
				}
			},
			"AclError": {
				"value": {
					"error_id": "f1565c6f-57e5-48fd-be40-db5d5a5d1fe2",
					"code": 677008,
					"status": "error",
					"message": "Insufficient permissions to access the resource"
				}
			},
			"UnregisteredBUError": {
				"value": {
					"error_id": "8cf9f8fc-73b0-479a-993d-74a780d92649",
					"code": 677017,
					"status": "error",
					"message": "Insufficient permissions to access the resource"
				}
			},
			"OrganizationSuspendedError": {
				"value": {
					"error_id": "92d34074-22af-4bd0-b5d6-a695cac0325b",
					"code": 677006,
					"status": "error",
					"message": "Insufficient permissions to access the resource"
				}
			},
			"InvalidOrganizationError": {
				"value": {
					"error_id": "534a2dab-92da-463b-b746-094e5a043d77",
					"code": 677013,
					"status": "error",
					"message": "Insufficient permissions to access the resource"
				}
			},
			"SuspendedBUError": {
				"value": {
					"error_id": "dd418582-7966-41f7-b313-bb636e91f003",
					"code": 677007,
					"status": "error",
					"message": "Insufficient permissions to access the resource"
				}
			},
			"OrganizationNotSpecifiedError": {
				"value": {
					"error_id": "aa70683a-3cc6-48af-aa14-7bcabba64908",
					"code": 677034,
					"status": "error",
					"message": "Insufficient permissions to access the resource"
				}
			},
			"InvalidAuthorizationError": {
				"value": {
					"error_id": "a473b031-2d97-420d-9dae-abfaa8a58f5a",
					"code": 677004,
					"status": "error",
					"message": "Invalid credentials for this resource"
				}
			},
			"InvalidTokenError": {
				"value": {
					"error_id": "4758da12-3346-48c9-a16a-2892f39ef9f1",
					"code": 677002,
					"status": "error",
					"message": "Invalid credentials to access the resource"
				}
			},
			"InvalidApiKeyError": {
				"value": {
					"error_id": "964e66f1-2f4a-4fc7-92aa-952d12f4b5bd",
					"code": 677005,
					"status": "error",
					"message": "Invalid credentials to access the resource"
				}
			},
			"InvalidParametersError": {
				"value": {
					"error_id": "350b9ee2-c509-48b0-a975-44f49ae04201",
					"code": 677016,
					"status": "error",
					"message": "Invalid parameters"
				}
			},
			"SubscriberNotFoundError": {
				"value": {
					"error_id": "a9d6ac9f-8ae7-4785-b148-9dee3b3809ba",
					"code": 677013,
					"status": "error",
					"message": "Subscriber not found"
				}
			},
			"InvalidContactError": {
				"value": {
					"error_id": "387f377b-dcee-45bb-88ed-b88d6cdb58c8",
					"code": 677024,
					"status": "error",
					"message": "Organization should have commercial contact information"
				}
			},
			"InvalidTypeError": {
				"value": {
					"error_id": "387f377b-dcee-45bb-88ed-b88d6cdb58c8",
					"code": 677025,
					"status": "error",
					"message": "Invalid organization_type for this operation"
				}
			},
			"InvalidLoginError": {
				"value": {
					"error_id": "92681a78-fc14-4863-9aff-92d6dca30b5c",
					"code": 677028,
					"status": "error",
					"message": "Organization should have login type"
				}
			},
			"LimitExceededError": {
				"value": {
					"error_id": "f07ac9ce-2f30-4eb7-bd7a-9bcc96f60738",
					"code": 677031,
					"status": "error",
					"message": "Subscriber limit exceeded"
				}
			},
			"InstallStatisticsDisabled": {
				"value": {
					"error_id": "246b1922-3e7d-4acc-94b0-766cacc71f51",
					"code": 677012,
					"status": "error",
					"message": "Install statistics is disabled"
				}
			},
			"DeviceExportGenerated": {
				"value": {
					"error_id": "246b1922-3e7d-4acc-94b0-766cacc71f51",
					"code": 677012,
					"status": "error",
					"message": "Device export already generated"
				}
			},
			"MissingOemLabelError": {
				"value": {
					"error_id": "eab447b1-a335-4c02-83fc-f936b1b38a31",
					"code": 677022,
					"status": "error",
					"message": "Missing oem_label"
				}
			},
			"OrganizationNotFoundError": {
				"value": {
					"error_id": "ce9ea3e2-1a5f-43ba-9ee6-b8a7cfd2e840",
					"code": 677013,
					"status": "error",
					"message": "Organization not found"
				}
			},
			"NoSubscriptionError": {
				"value": {
					"error_id": "31640ff2-9694-473c-82ea-ed8b2f11d059",
					"code": 677012,
					"status": "error",
					"message": "The subscriber has no subscriptions"
				}
			},
			"ProductSuspendedError": {
				"value": {
					"error_id": "1d151d17-4eb2-46c5-b23a-7a9e06636bff",
					"code": 677033,
					"status": "error",
					"message": "Product already suspended"
				}
			},
			"ProductActiveError": {
				"value": {
					"error_id": "9efcef54-a764-4587-9325-506f0495053f",
					"code": 677033,
					"status": "error",
					"message": "Product already active"
				}
			},
			"ProductNotFoundError": {
				"value": {
					"error_id": "fdf3dbe6-0251-4fa5-b705-9a1c031e96fb",
					"code": 677013,
					"status": "error",
					"message": "Cannot add products that are not owned"
				}
			},
			"ProductPresentError": {
				"description": "The subscriber already has a subscription for the provided product cannot receive another one.",
				"value": {
					"error_id": "c1304050-1802-40ca-8924-0ceefaf42de9",
					"code": 677033,
					"status": "error",
					"message": "The subscriber has a product with this id"
				}
			},
			"OrganizationProductSuspendedError": {
				"value": {
					"error_id": "1504c315-88b8-4e5f-91ab-88c90add55fa",
					"code": 677026,
					"status": "error",
					"message": "Product suspended"
				}
			},
			"SubscriptionLockedError": {
				"value": {
					"error_id": "bd179440-cb94-48fc-a421-7a6714493b04",
					"code": 677045,
					"status": "error",
					"message": "Another operation using this resource is currently being performed."
				}
			},
			"OrganizationCallbackServiceNotSetError": {
				"value": {
					"error_id": "b069ed17-3e1b-409d-9b30-fc22dc9c33a9",
					"code": 677038,
					"status": "error",
					"message": "Organization should have valid callback service information"
				}
			},
			"DeviceTopicsNotAllowedError": {
				"value": {
					"error_id": "1504c315-88b8-4e5f-91ab-88c90add55fa",
					"code": 677046,
					"status": "error",
					"message": "Device topics allowed only for organizations with install statistics feature"
				}
			},
			"ThreatTopicNotAllowedError": {
				"value": {
					"error_id": "1504c315-88b8-4e5f-91ab-88c90add55fa",
					"code": 677046,
					"status": "error",
					"message": "Threats topic allowed only for organizations with threats feature"
				}
			},
			"SubscriptionNotFoundError": {
				"value": {
					"error_id": "ac05c18a-7893-4d21-9e10-a3a66463efaa",
					"code": 677013,
					"status": "error",
					"message": "Subscription not found"
				}
			},
			"TaskNotFoundError": {
				"value": {
					"error_id": "978bb828-6c64-45c5-bf64-116a3ae0c5ac",
					"code": 677013,
					"status": "error",
					"message": "Task not found"
				}
			},
			"NonCancelableTaskError": {
				"value": {
					"error_id": "978bb828-6c64-45c5-bf64-116a3ae0c5ac",
					"code": 677012,
					"status": "error",
					"message": "You cannot cancel a finished task"
				}
			},
			"SimilarTaskError": {
				"value": {
					"error_id": "ac0c460d-1a71-43aa-af8f-cecf0a8faa28",
					"code": 677020,
					"status": "error",
					"message": "Similar task already executed. Check params and try again"
				}
			},
			"InvalidPeriodError": {
				"value": {
					"error_id": "3d68e64f-731f-4785-a76d-5e09e226f754",
					"code": 677016,
					"status": "error",
					"messagE": "Invalid report period"
				}
			},
			"QueryNotFoundError": {
				"value": {
					"error_id": "b7d78d22-deeb-4653-af7a-74c98cf3d482",
					"code": 677013,
					"status": "error",
					"message": "Query not found"
				}
			},
			"InvalidQueryError": {
				"value": {
					"error_id": "f4ed1c37-d5c6-4d0f-b5c0-8fda7f6b7cfa",
					"code": 677012,
					"status": "error",
					"message": "Invalid query hash"
				}
			},
			"BusinessUserNotFoundError": {
				"value": {
					"error_id": "b5f3a533-dfda-46c7-a0b4-14ca36b2f90f",
					"code": 677012,
					"status": "error",
					"message": "Business user not found"
				}
			},
			"RateLimitExceededError": {
				"value": {
					"error_id": "b5f3a533-dfda-46c7-a0b4-14ca36b2f90f",
					"code": 677048,
					"status": "error",
					"message": "Organization rate limit exceeded"
				}
			},
			"MissingEpaasWebhook": {
				"value": {
					"error_id": "4c3c7a16-fbb0-45de-99f7-b7abbbefc36c",
					"code": 677022,
					"status": "error",
					"message": "Missing EPAAS webhook"
				}
			}
		},
		"responses": {
			"GenericSuccess": {
				"description": "Successful response",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"status": {
									"type": "number"
								}
							}
						},
						"example": {
							"status": 0
						}
					}
				}
			},
			"ServerError": {
				"description": "Server error due to unavailable resource",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Server resource error": {
								"$ref": "#/components/examples/ServerError"
							},
							"External api error": {
								"$ref": "#/components/examples/ExternalApiError"
							}
						}
					}
				}
			},
			"InsufficientPermissions": {
				"description": "Insufficient permissions to access the resource",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Insufficient ACL permissions": {
								"$ref": "#/components/examples/AclError"
							},
							"The business user not registered": {
								"$ref": "#/components/examples/UnregisteredBUError"
							},
							"The managed organization is suspended": {
								"$ref": "#/components/examples/OrganizationSuspendedError"
							},
							"The managed organization does not exists": {
								"$ref": "#/components/examples/InvalidOrganizationError"
							},
							"The business user is suspended": {
								"$ref": "#/components/examples/SuspendedBUError"
							},
							"No X-Organization-Id specified": {
								"$ref": "#/components/examples/OrganizationNotSpecifiedError"
							}
						}
					}
				}
			},
			"InsufficientPermissionsWithoutRoles": {
				"description": "Insufficient permissions to access the resource",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"The business user not registered": {
								"$ref": "#/components/examples/UnregisteredBUError"
							},
							"The managed organization is suspended": {
								"$ref": "#/components/examples/OrganizationSuspendedError"
							},
							"The managed organization does not exists": {
								"$ref": "#/components/examples/InvalidOrganizationError"
							},
							"The business user is suspended": {
								"$ref": "#/components/examples/SuspendedBUError"
							}
						}
					}
				}
			},
			"InvalidCredentials": {
				"description": "Invalid authorization code / bearer token",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Invalid authorization header": {
								"$ref": "#/components/examples/InvalidAuthorizationError"
							},
							"Invalid bearer token": {
								"$ref": "#/components/examples/InvalidTokenError"
							},
							"Invalid API key": {
								"$ref": "#/components/examples/InvalidApiKeyError"
							}
						}
					}
				}
			},
			"InvalidBearerCredentials": {
				"description": "Invalid authorization bearer token",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Invalid authorization header": {
								"$ref": "#/components/examples/InvalidAuthorizationError"
							},
							"Invalid bearer token": {
								"$ref": "#/components/examples/InvalidTokenError"
							}
						}
					}
				}
			},
			"InvalidParameters": {
				"description": "Invalid parameters",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Invalid parameters": {
								"$ref": "#/components/examples/InvalidParametersError"
							}
						}
					}
				}
			},
			"SubscriberNotFound": {
				"description": "Subscriber not found",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Subscriber not found": {
								"$ref": "#/components/examples/SubscriberNotFoundError"
							}
						}
					}
				}
			},
			"EnrolRequirementsNotMet": {
				"description": "Enrolment requirements not met",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Incomplete organization contact": {
								"$ref": "#/components/examples/InvalidContactError"
							},
							"Invalid organization type": {
								"$ref": "#/components/examples/InvalidTypeError"
							},
							"Incomplete login type": {
								"$ref": "#/components/examples/InvalidLoginError"
							},
							"Subscriber limit exceeded": {
								"$ref": "#/components/examples/LimitExceededError"
							}
						}
					}
				}
			},
			"OrganizationNotFound": {
				"description": "Organization not found",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Organization not found": {
								"$ref": "#/components/examples/OrganizationNotFoundError"
							}
						}
					}
				}
			},
			"TaskNotFound": {
				"description": "Task not found",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Task not found": {
								"$ref": "#/components/examples/TaskNotFoundError"
							}
						}
					}
				}
			},
			"BusinessUserNotFound": {
				"description": "Business user not found",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Busines user not found": {
								"$ref": "#/components/examples/BusinessUserNotFoundError"
							}
						}
					}
				}
			},
			"ListOfProducts": {
				"description": "The list of products",
				"content": {
					"application/json": {
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/Product"
							}
						}
					}
				}
			},
			"RateLimitExceeded": {
				"description": "Rate limit exceeded",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						},
						"examples": {
							"Rate limit exceeded": {
								"$ref": "#/components/examples/RateLimitExceededError"
							}
						}
					}
				},
				"headers": {
					"Client-ID-RateLimit-Limit": {
						"$ref": "#/components/headers/Client-ID-RateLimit-Limit"
					},
					"Client-ID-RateLimit-Remaining": {
						"$ref": "#/components/headers/Client-ID-RateLimit-Remaining"
					},
					"Client-ID-RateLimit-Reset": {
						"$ref": "#/components/headers/Client-ID-RateLimit-Reset"
					},
					"ApiKey-RateLimit-Limit": {
						"$ref": "#/components/headers/ApiKey-RateLimit-Limit"
					},
					"ApiKey-RateLimit-Remaining": {
						"$ref": "#/components/headers/ApiKey-RateLimit-Remaining"
					},
					"ApiKey-RateLimit-Reset": {
						"$ref": "#/components/headers/ApiKey-RateLimit-Reset"
					},
					"Organization-RateLimit-Limit": {
						"$ref": "#/components/headers/Organization-RateLimit-Limit"
					},
					"Organization-RateLimit-Remaining": {
						"$ref": "#/components/headers/Organization-RateLimit-Remaining"
					},
					"Organization-RateLimit-Reset": {
						"$ref": "#/components/headers/Organization-RateLimit-Reset"
					}
				}
			}
		},
		"schemas": {
			"Page": {
				"description": "The page query-string parameter for paginated APIs",
				"type": "number",
				"minimum": 0
			},
			"Limit": {
				"description": "The limit/page size query-string parameter for paginated APIs",
				"type": "number",
				"minimum": 5,
				"maximum": 30,
				"default": 20
			},
			"FileContent": {
				"description": "The file content values for file uploads",
				"type": "string",
				"enum": [
					"application/json",
					"text/csv",
					"image/png",
					"image/jpeg"
				]
			},
			"ApiError": {
				"type": "object",
				"properties": {
					"code": {
						"description": "The code of the error. Identifies the type of the error. The current list of error codes is:\n* `677001` - Invalid authorization code for business user login\n* `677002` - Invalid access token used to authenticate the request\n* `677003` - Invalid refresh token for business user auth credentials refresh\n* `677004` - Invalid Authorization header\n* `677005` - Invalid API key used to authenticate the request\n* `677006` - The managed organization is suspended, usually received as an authentication error\n* `677007` - The business user is suspended, usuals received as an authentication error\n* `677008` - The business user / API key does not have the permissions to access the requested resource\n* `677009` - A server error occurred due to a resource malfunction (database, caching, streaming)\n* `677010` - An error occurred third party API error\n* `677011` - An error occurred due to unexpected causes\n* `677012` - Violation of one or more restrictions in the API logic\n* `677013` - The requested resource does not exist\n* `677014` - The requested HTTP method is not supported\n* `677015` - The requested resource is not implemented\n* `677016` - The request payload / query string is invalid\n* `677017` - The Bitdefender user is not registered as MSP business user\n* `677018` - The role assigned / removed are not owned by the organization\n* `677019` - The products assigned / modified are not owned by the organization\n* `677020` - The resource already exists\n* `677021` - The minimum time before removing a suspended organization has not passed\n* `677022` - The organization does not have the correct state (a set of properties that have a specific value or are in a range) for the operation\n* `677023` - The organization has not the correct state for the requested action (e.g. an attempt to delete an organization not suspended)\n* `677024` - The organization contact information is not complete\n* `677025` - The organization type does not allow the requested action\n* `677026` - The product modified is suspended\n* `677027` - The product is still in use and cannot be removed\n* `677028` - The login type of the organization is not set\n* `677029` - The organization has enrolled subscribers and cannot be removed\n* `677030` - The organization has managed organization and cannot be removed\n* `677031` - The subscriber quota has been exceeded\n* `677032` - The subscriber limit is lower than the current number of subscriber enrolled / reserved to enroll for the child organizations\n* `677033` - The product assigned to the subscriber is already in the desired state\n* `677034` - The business user is managing two or more organizations and the desired organization for the request is not specified\n* `677035` - The OEM label of the organization is not supported by the assigned product\n* `677036` - The subscriber completed the enrolment process but the MSP data is out of sync with the subscriber actual state.\n* `677037` - A scheduled maintenance is taking place on the API PATH. Partial or complete functionalities would be unavailable for some time. You will be announced in advanced of any scheduled maintenance.\n* `677039` - The subscription is not compatible with the subscriptions present on the account of the subscriber\n* `677040` - The product bundle is already used in an active trial\n* `677041` - The product bundle is not used in an active trial\n* `677042` - The organization plans is not eligible for trials creation\n* `677043` - Invalid subscription type, when trying to update a non-trial subscription with the convert flag or trying to update a trial subscription with the suspended flag\n* `677044` - The trial subscription is expired\n* `677045` - Another operation using this resource is currently being performed\n* `677046` - The feature is not enabled\n* `677047` - The selected platform is not available in the subscription\n* `677048` - Organization/Api key/Client credentials rate limit exceeded\n",
						"type": "number",
						"format": "int32",
						"enum": [
							677001,
							677002,
							677003,
							677004,
							677005,
							677006,
							677007,
							677008,
							677009,
							677010,
							677011,
							677012,
							677013,
							677014,
							677015,
							677016,
							677017,
							677018,
							677019,
							677020,
							677021,
							677022,
							677023,
							677024,
							677025,
							677026,
							677027,
							677028,
							677029,
							677030,
							677031,
							677032,
							677033,
							677034,
							677035,
							677036,
							677037,
							677039,
							677040,
							677041,
							677042,
							677043,
							677044,
							677048
						]
					},
					"error_id": {
						"type": "string",
						"description": "The ID of the error response. Uniquely identifies the request response"
					},
					"message": {
						"description": "Human readable description of the error",
						"type": "string"
					},
					"status": {
						"description": "The status of the response. Possible values `error`",
						"type": "string"
					}
				}
			},
			"MspEntityId": {
				"type": "string",
				"format": "uuid"
			},
			"EventTopic": {
				"type": "string",
				"minLength": 2,
				"maxLength": 50,
				"enum": [
					"subscriber-created",
					"subscriber-confirmed",
					"task-completed",
					"device-created",
					"device-changed",
					"device-removed",
					"threats-detected"
				]
			},
			"BitdefenderInternalId": {
				"type": "string",
				"description": "Internal Bitdefender identifier needed to complete the operation"
			},
			"DatacenterId": {
				"type": "string",
				"description": "Identifier of the data center where an organization or subscriber is located"
			},
			"Timestamp": {
				"type": "integer",
				"format": "int64",
				"example": 1574420320000
			},
			"OrganizationName": {
				"type": "string",
				"pattern": "^\\\\w*( ?[-,.&!?/\\\\#*]? ?\\\\w+)*$"
			},
			"OrganizationType": {
				"type": "string",
				"example": "operator",
				"description": "The type of the organization. Each organization type has some capabilities:\n ##### `system integrator`\n The _system integrator_ organization is an organization that can manage organizations but cannot manage subscribers.\n The _system integrator_ organization type can be selected only when the organization is created and cannot be changed to other organization type by organization update API.\n ##### `operator`\n The _operator_ organization is an organization that can manage subscribers but cannot manage organizations\n ##### `distributor`\n The _distributor_ organization is an organization that can have manage subscribers and organizations\n ##### `oem_operator`\n The _oem_operator_ organization is an organization that is selling Bitdefender rebranded products. It can only be created by an organization that has the type _system integrator_ and, like the _operator_ organization type, it can manage subscribers, but it cannot manage organization. \\\n The _oem_operator_ organization will not be able to enroll any subscribers or have products in its portfolio until the a Bitdefender MSP manager will mark the OEM rebranding of the Bitdefender products as *supported* by the MSP platform. \\\n The _oem_operator_ organization type can be selected only when the organization is created and cannot be changed to other non-OEM organization type by organization update API.\n ##### `oem_distributor`\n The _oem_distributor_ organization is an organization that is selling Bitdefender rebranded products. It can only be created by an organization that has the type _system integrator_  or _oem_distributor_ and. Like the _distributor_ organization type, it can manage subscribers and organizations \\\n The _oem_distributor_ organization will not be able to enroll any subscribers or have products in its portfolio until the a Bitdefender MSP manager will mark the OEM rebranding of the Bitdefender products as *supported* by the MSP platform. \\\n The _oem_distributor_ organization type can be selected only when the organization is created and cannot be changed to other non-OEM organization type by organization update API.\n",
				"enum": [
					"system integrator",
					"operator",
					"distributor",
					"oem_operator",
					"oem_distributor"
				]
			},
			"OrganizationContact": {
				"type": "object",
				"description": "The contact information of the organization. There are two types of contact commercial (regarding the subscription) and customer support (regarding any issues encountered by the subscriber while using the Bitdefender application)",
				"properties": {
					"website": {
						"type": "string",
						"description": "The website of the organization which subscribers can use to contact the organization",
						"example": "www.bitdefender.com/contact"
					},
					"email": {
						"type": "string",
						"description": "The email address of the organization which subscribers can use to contact the organization",
						"example": "contact@bitdefender.com"
					},
					"phone": {
						"type": "string",
						"description": "The phone number of the organization which subscribers can use to contact the organization",
						"example": "+345 845 44566"
					}
				}
			},
			"LoginClientSecret": {
				"type": "string",
				"minLength": 3,
				"maxLength": 254,
				"description": "The credentials for the server specified in the `sso_url` field",
				"example": "KizfGPg1bAz3Li00gZeWT2sILfo5x0khC"
			},
			"LoginClientId": {
				"type": "string",
				"minLength": 3,
				"maxLength": 254,
				"description": "The credentials for the server specified in the `sso_url` field",
				"example": "61PGUTOF6CFQ4BPPPRENX34QFK6JEZU26"
			},
			"LoginCustomParams": {
				"description": "A list of custom parameters to be passed to the OTP request",
				"type": "array",
				"items": {
					"type": "object",
					"oneOf": [
						{
							"properties": {
								"name": {
									"type": "string",
									"minLength": 1,
									"maxLength": 100,
									"description": "The name of the parameter",
									"example": "auth"
								},
								"value": {
									"type": "string",
									"minLength": 1,
									"maxLength": 200,
									"description": "The value of the parameter",
									"example": true
								},
								"type": {
									"type": "string",
									"enum": [
										"PLAIN"
									],
									"description": "The type of custom parameter. A custom value should be provided for the param in the value config property (default value) for PLAIN type.",
									"example": "PLAIN"
								}
							},
							"additionalProperties": false,
							"required": [
								"name",
								"type",
								"value"
							]
						},
						{
							"properties": {
								"name": {
									"type": "string",
									"minLength": 1,
									"maxLength": 100,
									"description": "The name of the parameter",
									"example": "auth"
								},
								"type": {
									"type": "string",
									"enum": [
										"REQUEST_ID"
									],
									"description": "The type of custom parameter. The value will be automatically completed when the request is made, ignoring the value config property for REQUEST_ID type.",
									"example": "PLAIN"
								}
							},
							"additionalProperties": false,
							"required": [
								"name",
								"type"
							]
						}
					]
				},
				"maxItems": 20
			},
			"LogoutConfigurationSSO": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string",
						"minLength": 1,
						"maxLength": 254,
						"format": "url",
						"description": "The URL of the logout",
						"example": "http://login.domain.com"
					},
					"scope": {
						"type": "string",
						"minLength": 1,
						"maxLength": 254,
						"description": "The logout scope",
						"example": "email"
					},
					"client_id_name": {
						"type": "string",
						"minLength": 1,
						"maxLength": 254,
						"description": "The name of the client ID parameter",
						"example": "client_id"
					},
					"redirect_url_name": {
						"type": "string",
						"minLength": 3,
						"maxLength": 254,
						"example": "redirect_url",
						"description": "The name of the redirect URL parameter used redirect the subscriber after logout"
					},
					"custom": {
						"description": "A list of custom parameters to be passed to the logout request",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"minLength": 1,
									"maxLength": 50,
									"description": "The name of the parameter",
									"example": "auth"
								},
								"value": {
									"type": "string",
									"minLength": 1,
									"maxLength": 300,
									"description": "The value of the parameter",
									"example": true
								}
							},
							"required": [
								"name",
								"value"
							],
							"additionalProperties": false,
							"maxItems": 20
						}
					}
				},
				"required": [
					"url"
				]
			},
			"LoginUserInfo": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string",
						"minLength": 1,
						"maxLength": 254,
						"format": "url",
						"description": "The URL of the user info API",
						"example": "http://login.domain.com"
					},
					"method": {
						"type": "string",
						"enum": [
							"POST",
							"GET"
						],
						"description": "The HTTP method of the user info API",
						"example": "POST",
						"default": "POST"
					},
					"id_response_field_name": {
						"type": "string",
						"minLength": 1,
						"maxLength": 254,
						"description": "The name of the user ID property of the response",
						"example": "id",
						"default": "id"
					},
					"user_response_field_name": {
						"type": "string",
						"minLength": 1,
						"maxLength": 254,
						"description": "The name of the user property of the response",
						"example": "email",
						"default": "email"
					}
				},
				"required": [
					"url"
				]
			},
			"BitdefenderLogin": {
				"type": "object",
				"description": "The login services are manged by Bitdefender using the Bitdefender Login servers.",
				"properties": {
					"type": {
						"type": "string",
						"description": "The type of the login service",
						"enum": [
							"bitdefender"
						],
						"example": "bitdefender"
					},
					"allow_sso_inheritance": {
						"type": "boolean",
						"description": "Flag for allowing the login services to be inherited by a child organization",
						"example": true
					},
					"send_email": {
						"type": "boolean",
						"description": "Boolean flag for sending the subscriber enrolment email upon creation. If this flag is set to false, the organization is responsible for delivering the enrolment URL to the subscribers.",
						"example": false
					}
				},
				"required": [
					"type",
					"send_email"
				]
			},
			"ExternalImplicitLogin": {
				"type": "object",
				"description": "The login services are managed by the organization. Bitdefender will redirect all subscribers to the indicated login servers.",
				"deprecated": true,
				"properties": {
					"type": {
						"type": "string",
						"description": "The type of the login service",
						"enum": [
							"external"
						],
						"example": "external"
					},
					"sso_type": {
						"type": "string",
						"description": "The type of external login",
						"enum": [
							"implicit"
						],
						"example": "implicit"
					},
					"allow_sso_inheritance": {
						"type": "boolean",
						"description": "Flag for allowing the login services to be inherited by a child organization",
						"example": true
					},
					"redirect_url": {
						"type": "string",
						"minLength": 3,
						"maxLength": 254,
						"format": "url",
						"description": "The URL of the server where the subscriber should be redirected in order to be authenticated",
						"example": "http://login.domain.com"
					},
					"sso_url": {
						"type": "string",
						"minLength": 3,
						"maxLength": 254,
						"format": "url",
						"description": "The URL of the server where the token received from the authentication server are exchanged with the user information.",
						"example": "https://tokens.domain.com"
					},
					"client_secret": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LoginClientSecret"
							},
							{
								"description": "The credentials for the server specified in the `sso_url` field"
							}
						]
					},
					"client_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LoginClientId"
							},
							{
								"description": "The credentials for the server specified in the `sso_url` field"
							}
						]
					},
					"method": {
						"type": "string",
						"description": "The HTTP method used to exchange the token for subscriber information",
						"enum": [
							"POST",
							"GET"
						],
						"default": "POST"
					},
					"token_name": {
						"type": "string",
						"minLength": 3,
						"maxLength": 254,
						"description": "The name of the token parameter used to exchange the token for subscriber information",
						"example": "token"
					},
					"redirect_url_name": {
						"type": "string",
						"minLength": 3,
						"maxLength": 254,
						"example": "redirect_url",
						"description": "The name of the redirect URL parameter used redirect the subscriber after authentication"
					},
					"user_identifier_name": {
						"minLength": 1,
						"maxLength": 254,
						"description": "The name of the user parameter used to pre-complete the user identifier in the authentication process",
						"type": "string",
						"example": "user_hint"
					}
				},
				"required": [
					"type",
					"sso_type",
					"client_id",
					"client_secret",
					"sso_url",
					"redirect_url"
				]
			},
			"ExternalOauthLogin": {
				"type": "object",
				"description": "The login services are managed by the organization. Bitdefender will redirect all subscribers to the indicated login servers. This represents the OAUTH2 SSO configuration.",
				"properties": {
					"type": {
						"type": "string",
						"description": "The type of the login service",
						"enum": [
							"external"
						],
						"example": "external"
					},
					"sso_type": {
						"type": "string",
						"description": "The type of external login",
						"enum": [
							"authorization_code"
						],
						"example": "authorization_code"
					},
					"allow_sso_inheritance": {
						"type": "boolean",
						"description": "Flag for allowing the login services to be inherited by a child organization",
						"example": true
					},
					"client_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LoginClientId"
							},
							{
								"description": "The client identifier issued for the Bitdefender user login client"
							}
						]
					},
					"client_secret": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LoginClientSecret"
							},
							{
								"description": "The client secret used as credentials for the access token API"
							}
						]
					},
					"authorize": {
						"type": "object",
						"properties": {
							"skip": {
								"type": "boolean",
								"description": "Flag for allowing a login flow without the authorize step (available only for organizations with the `EPAAS` feature enabled)",
								"example": true,
								"default": false
							},
							"url": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"format": "url",
								"description": "The URL of the authorize server",
								"example": "http://login.domain.com"
							},
							"redirect_url_name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"description": "The name of the redirect URL query parameter",
								"example": "redirect_uri",
								"default": "redirect_uri"
							},
							"client_id_name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"description": "The name of the client ID parameter",
								"example": "client_id",
								"default": "client_id"
							},
							"scope": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"description": "The authorization scope",
								"example": "email",
								"default": "email"
							},
							"custom": {
								"description": "A list of custom parameters to be passed to the authorization request",
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string",
											"minLength": 1,
											"maxLength": 50,
											"description": "The name of the parameter",
											"example": "auth"
										},
										"value": {
											"type": "string",
											"minLength": 1,
											"maxLength": 300,
											"description": "The value of the parameter",
											"example": true
										}
									},
									"required": [
										"name",
										"value"
									],
									"additionalProperties": false
								},
								"maxItems": 20
							}
						},
						"required": [
							"url"
						]
					},
					"access_token": {
						"type": "object",
						"properties": {
							"url": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"format": "url",
								"description": "The URL of the access token API",
								"example": "http://login.domain.com"
							},
							"method": {
								"type": "string",
								"enum": [
									"POST",
									"GET"
								],
								"description": "The HTTP method of the access token API",
								"example": "POST",
								"default": "POST"
							},
							"redirect_url_name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"description": "The name of the redirect URL query parameter",
								"example": "redirect_uri",
								"default": "redirect_uri"
							},
							"access_token_response_field_name": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"description": "The name of the access token property in the response",
								"example": "access_token",
								"default": "access_token"
							},
							"authorization": {
								"type": "string",
								"enum": [
									"payload",
									"basic"
								],
								"description": "How should the authentication be provided to the access tokens endpoint",
								"example": "payload",
								"default": "payload"
							},
							"encoding": {
								"type": "string",
								"enum": [
									"json",
									"x-www-form-urlencoded"
								],
								"description": "The encoding of the get access token request",
								"default": "json",
								"example": "json"
							}
						},
						"required": [
							"url"
						]
					},
					"user_info": {
						"$ref": "#/components/schemas/LoginUserInfo"
					},
					"logout": {
						"$ref": "#/components/schemas/LogoutConfigurationSSO"
					}
				},
				"required": [
					"type",
					"sso_type",
					"authorize",
					"access_token",
					"user_info",
					"client_id",
					"client_secret"
				]
			},
			"InheritedLogin": {
				"type": "object",
				"description": "The login services are inherited from an ancestor organization.",
				"properties": {
					"type": {
						"type": "string",
						"description": "The type of the inherited login service",
						"enum": [
							"bitdefender",
							"external"
						],
						"example": "external"
					},
					"inherited_organization_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							},
							{
								"description": "The ID of the organization whose login services are inherited"
							}
						]
					},
					"sso_type": {
						"type": "string",
						"description": "The type of the inherited external login",
						"enum": [
							"implicit",
							"authorization_code",
							"otp"
						],
						"example": "implicit"
					}
				}
			},
			"InheritedLoginUpdate": {
				"type": "object",
				"description": "The login services are inherited from an ancestor organization.",
				"properties": {
					"type": {
						"type": "string",
						"description": "The type of the inherited login service",
						"enum": [
							"inherited"
						],
						"example": "external"
					},
					"inherited_organization_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							},
							{
								"description": "The ID of the organization whose login services are inherited"
							}
						]
					}
				}
			},
			"OtpLogin": {
				"type": "object",
				"description": "This login type is only available for the organizations that have the `OTP` feature enabled.\n\nThe login services are managed by the organization. Bitdefender will redirect all subscribers to the indicated login servers. This represents the OAUTH2 SSO configuration.\n",
				"properties": {
					"type": {
						"type": "string",
						"description": "The type of the login service",
						"enum": [
							"external"
						],
						"example": "external"
					},
					"sso_type": {
						"type": "string",
						"description": "The type of external login",
						"enum": [
							"otp"
						],
						"example": "otp"
					},
					"allow_sso_inheritance": {
						"type": "boolean",
						"description": "Flag for allowing the login services to be inherited by a child organization",
						"example": true
					},
					"send_otp": {
						"type": "object",
						"properties": {
							"url": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"format": "url",
								"description": "The URL of the send OTP request",
								"example": "http://login.domain.com"
							},
							"method": {
								"type": "string",
								"enum": [
									"POST",
									"GET"
								],
								"description": "The HTTP method of the otp API",
								"example": "POST",
								"default": "POST"
							},
							"custom": {
								"$ref": "#/components/schemas/LoginCustomParams"
							},
							"api_auth": {
								"description": "The authentication used for send OTP request",
								"type": "string",
								"enum": [
									"basic",
									"client_credentials"
								],
								"default": "basic",
								"example": "basic"
							}
						},
						"required": [
							"url"
						]
					},
					"user_info": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LoginUserInfo"
							},
							{
								"properties": {
									"custom": {
										"$ref": "#/components/schemas/LoginCustomParams"
									},
									"api_auth": {
										"description": "The authentication used for user info request",
										"type": "string",
										"enum": [
											"basic",
											"client_credentials"
										],
										"default": "basic",
										"example": "basic"
									}
								}
							}
						]
					},
					"client_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LoginClientId"
							},
							{
								"description": "The client ID to be used for request authentication (user info and send OTP requests)."
							}
						]
					},
					"client_secret": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LoginClientSecret"
							},
							{
								"description": "The client secret to be used for request authentication (user info and send OTP requests)."
							}
						]
					},
					"user_identification": {
						"type": "string",
						"enum": [
							"user",
							"external_id"
						],
						"default": "user",
						"description": "Defines how to identify the user in the Login database after receiving user info from an SSO",
						"example": "user"
					},
					"use_mtls": {
						"type": "boolean",
						"description": "Whether or not the requests made to SSO should use mTLS",
						"default": false,
						"example": false
					},
					"client_credentials": {
						"type": "object",
						"description": "The client credentials OAUTH2 configuration. Mandatory if send_opt.api_auth or user_info.api_auth are set to client_credentials.",
						"properties": {
							"url": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"format": "url",
								"description": "The URL where the OAUTH2 client credentials request should be made",
								"example": "http://login.domain.com"
							},
							"method": {
								"type": "string",
								"enum": [
									"POST",
									"GET"
								],
								"description": "The HTTP method used for the client credential request",
								"example": "POST",
								"default": "POST"
							},
							"encoding": {
								"type": "string",
								"enum": [
									"x-www-form-urlencoded",
									"json"
								],
								"description": "The encoding for the client credentials request",
								"example": "json",
								"default": "json"
							},
							"scope": {
								"type": "string",
								"minLength": 1,
								"maxLength": 254,
								"description": "The scope used for the client credentials request"
							}
						},
						"required": [
							"url"
						]
					}
				},
				"required": [
					"type",
					"send_otp",
					"user_info",
					"client_id",
					"client_secret"
				]
			},
			"Lang": {
				"description": "The preferred language for the subscriber account in ISO-2 format.",
				"type": "string",
				"example": "en_US",
				"enum": [
					"de_DE",
					"en_AU",
					"en_GB",
					"en_US",
					"fr_CA",
					"fr_FR",
					"nl_NL",
					"es_ES",
					"it_IT",
					"pt_BR",
					"ro_RO",
					"pt_PT",
					"pl_PL",
					"ko_KR",
					"el_GR",
					"cs_CZ",
					"vi_VN",
					"ar_SA",
					"ja_JP",
					"tr_TR",
					"th_TH",
					"hu_HU",
					"ru_RU",
					"sv_SE"
				]
			},
			"Organization": {
				"type": "object",
				"properties": {
					"created": {
						"description": "The millisecond timestamp when the organization was created.",
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							}
						]
					},
					"last_updated": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							}
						],
						"description": "The millisecond timestamp when the organization was last updated"
					},
					"organization_label": {
						"example": "Bitdefender",
						"description": "The label of the organization provided by the parent organization",
						"allOf": [
							{
								"$ref": "#/components/schemas/OrganizationName"
							}
						]
					},
					"organization_name": {
						"example": "Bitdefender",
						"type": "string",
						"description": "The label of the organization as desired by the business users that man of th",
						"allOf": [
							{
								"$ref": "#/components/schemas/OrganizationName"
							}
						]
					},
					"organization_type": {
						"$ref": "#/components/schemas/OrganizationType"
					},
					"parent_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							},
							{
								"description": "The organization ID of the parent organization",
								"example": "dd2f6b72-6713-49c1-bd56-242d7040176e"
							}
						]
					},
					"suspended": {
						"type": "boolean",
						"description": "The suspended flag of the organization. If set to true all the child organizations will also be suspended. The business users that manage an organization that is suspended will be able to view and remove data.",
						"example": false
					},
					"organization_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							},
							{
								"description": "The organization ID of the organization",
								"example": "093f4260-3956-4ae6-aab2-9d5e45fa1f34"
							}
						]
					},
					"organization_logo": {
						"type": "string",
						"example": "https://akg.nimbus.bitdefneder.net?token8c151632eed054435b43eb8352f98c09",
						"description": "The URL of the organization logo."
					},
					"organization_logo_id": {
						"type": "string",
						"example": "1c8c05eb-cc4c-4467-8a7f-2cd01eb11892",
						"description": "The file ID of the organization logo in the Bitdefender file storage"
					},
					"organization_level": {
						"type": "number",
						"enum": [
							1,
							2
						],
						"example": 2,
						"description": "The level of the organization. Level 1 represents the organizations with an enclosed user base that Bitdefender cannot target with offers. Level 2 represents organizations with an open user base that Bitdefender can target with offers."
					},
					"subscriber_count": {
						"type": "number",
						"example": 250,
						"minimum": 0,
						"description": "The number of subscribers enrolled by the organization and the number of subscribers reserved for child organizations (e.g. if the organizations enrols 30 subscribers and allocates the subscriber limit 1000 for the child organization, then the subscriber_count will have the value 1030)."
					},
					"subscriber_limit": {
						"type": "number",
						"example": 100000,
						"minimum": -1,
						"description": "The maximum number of subscribers that can be enrolled under the current organization (child organizations included). If this value is not restricted, this field will hold the value -1"
					},
					"business_user_count": {
						"type": "number",
						"example": 250,
						"description": "The number of business users that manage the organization"
					},
					"business_user_invite": {
						"type": "boolean",
						"example": true,
						"description": "Boolean flag for sending invite email for a new business user"
					},
					"business_user_domains": {
						"description": "The list of email domains that can be used for creating business users. If empty no restrictions are applied.",
						"type": "array",
						"items": {
							"type": "string",
							"minLength": 4,
							"maxLength": 20,
							"pattern": "[a-z]+\\.?[a-z]+\\.[a-z]{2,10}",
							"example": "bitdefender.com"
						},
						"uniqueItems": true,
						"maxItems": 10
					},
					"api_key_count": {
						"type": "number",
						"example": 250,
						"description": "The number if API keys created by the organization"
					},
					"organization_website": {
						"type": "string",
						"description": "The URL of the organization's website",
						"example": "https://bitdefender.com"
					},
					"central_url": {
						"type": "string",
						"example": "https://central.bitdefender.com",
						"description": "The URL of the website where the subscribers can manage their Bitdefender account"
					},
					"plan": {
						"description": "The organization tier plan.",
						"type": "object",
						"properties": {
							"apikey": {
								"type": "number",
								"example": 500,
								"description": "The number of API key request that an organization is allowed to make in 10 minutes (fixed window)."
							},
							"organization": {
								"type": "number",
								"description": "The number of request the organization is allowed to make to the MSP servers in 24h.",
								"example": 35000
							},
							"name": {
								"description": "The name of the plan",
								"type": "string",
								"example": "enterprise"
							},
							"business_user_count": {
								"description": "The number of business users the organization is allowed to create",
								"type": "number",
								"example": 250
							},
							"api_key_count": {
								"type": "number",
								"description": "The number of API keys an organization is allowed to create.",
								"example": 250
							}
						}
					},
					"customer_contact": {
						"description": "The customer support contact of the organization. The subscriber will use these contact methods for any issue regarding usage of the Bitdefender application",
						"allOf": [
							{
								"$ref": "#/components/schemas/OrganizationContact"
							}
						]
					},
					"commercial_contact": {
						"description": "The commercial contact of the organization. The subscriber will use these contact methods for any issue regarding the subscription for the Bitdefender application",
						"allOf": [
							{
								"$ref": "#/components/schemas/OrganizationContact"
							}
						]
					},
					"remaining_quota": {
						"type": "object",
						"description": "The remaining request quota for the organization",
						"properties": {
							"quota": {
								"type": "integer",
								"description": "The remaining organization quota",
								"example": 34829
							},
							"time": {
								"type": "integer",
								"description": "The time left in seconds until the quota resets",
								"example": 49903
							}
						}
					},
					"login_type": {
						"description": "The login services used by subscribers to login in the Bitdefender applications",
						"oneOf": [
							{
								"$ref": "#/components/schemas/BitdefenderLogin"
							},
							{
								"$ref": "#/components/schemas/ExternalImplicitLogin"
							},
							{
								"$ref": "#/components/schemas/ExternalOauthLogin"
							},
							{
								"$ref": "#/components/schemas/OtpLogin"
							},
							{
								"$ref": "#/components/schemas/InheritedLogin"
							}
						],
						"example": {
							"type": "bitdefender",
							"send_email": true
						}
					},
					"tos": {
						"description": "Terms of service (ToS) agreed",
						"type": "object",
						"properties": {
							"accepted_version": {
								"description": "The latest accepted version of ToS",
								"type": "string",
								"example": "1.0.2"
							},
							"timestamp": {
								"description": "The millisecond timestamp of the agreement",
								"type": "number",
								"example": 1573133134329
							},
							"latest_version": {
								"description": "The latest version of ToS",
								"type": "string",
								"example": "1.1.0"
							},
							"tos_url": {
								"description": "The URL where the latest ToS are found",
								"type": "string",
								"example": "https://bitdefender.com/terms-of-service"
							}
						}
					},
					"lang": {
						"$ref": "#/components/schemas/Lang"
					},
					"oem_label": {
						"type": "string",
						"description": "The ID of the OEM label for the rebranded Bitdefender products",
						"example": "com.softastic"
					},
					"callback_service": {
						"type": "object",
						"properties": {
							"url": {
								"type": "string",
								"format": "uri",
								"maxLength": 300,
								"description": "The url that should be called for the the callback service",
								"example": "https://host.domain/callback/service"
							},
							"method": {
								"type": "string",
								"description": "The HTTP method of the API",
								"default": "post",
								"enum": [
									"post",
									"put"
								]
							},
							"auth": {
								"type": "object",
								"description": "Auth details the callback service",
								"properties": {
									"value": {
										"type": "string",
										"description": "The value of the auth token/key used",
										"minLength": 50,
										"maxLength": 500
									},
									"in": {
										"type": "string",
										"description": "Where the auth value should be placed",
										"enum": [
											"headers",
											"query",
											"body"
										],
										"default": "headers"
									},
									"name": {
										"type": "string",
										"description": "The name of the property used to hold the auth value",
										"example": "auth",
										"default": "ApiKey",
										"minLength": 2,
										"maxLength": 50
									}
								},
								"required": [
									"value"
								]
							}
						},
						"required": [
							"url",
							"auth"
						]
					},
					"epaas_webhook": {
						"description": "EPAAS webhook can be set only for organizations with `EPAAS` feature enabled",
						"type": "object",
						"properties": {
							"enabled": {
								"type": "boolean",
								"description": "EPAAS webhook flag, if true, events will be forwarded",
								"example": true
							},
							"url": {
								"type": "string",
								"format": "uri",
								"maxLength": 300,
								"description": "The url that should be called",
								"example": "https://host.domain/epaas/webhook"
							},
							"auth_type": {
								"type": "string",
								"description": "The authentication type of the API",
								"enum": [
									"basic",
									"payload"
								]
							},
							"auth_data": {
								"type": "object",
								"description": "Auth details of the EPAAS webhook",
								"properties": {
									"client_id": {
										"type": "string",
										"description": "Client ID",
										"minLength": 8,
										"maxLength": 128,
										"example": "a2ad21fsc212d"
									},
									"client_secret": {
										"type": "string",
										"description": "The secret for the client_id",
										"example": "23d143f12dase12ff345fgw12",
										"minLength": 8,
										"maxLength": 128
									}
								},
								"required": [
									"client_id",
									"client_secret"
								]
							}
						},
						"required": [
							"enabled",
							"url",
							"auth_type",
							"auth_data"
						]
					},
					"approved": {
						"type": "boolean",
						"description": "The approved flag of the organization. If set to false the organization details cannot be updated",
						"example": false
					}
				}
			},
			"ProductId": {
				"description": "The ID of the product bundle",
				"type": "string",
				"example": "tsmd-10d"
			},
			"ExternalIdentifier": {
				"type": "string",
				"example": "11faa3d9236940fdaf4a35c1c8403a58",
				"minLength": 3,
				"maxLength": 500
			},
			"ReservationId": {
				"type": "string",
				"example": "11faa3d9236940fdaf4a35c1c8403a58",
				"minLength": 3,
				"maxLength": 100
			},
			"Subscription": {
				"type": "object",
				"description": "An assignation of a product bundle to a subscriber",
				"properties": {
					"subscription_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							},
							{
								"description": "The ID of the subscription",
								"example": "59147eb9-712f-46eb-ae75-c4c2803cdfa6"
							}
						]
					},
					"product_id": {
						"$ref": "#/components/schemas/ProductId"
					},
					"suspended": {
						"type": "boolean",
						"description": "Suspended subscription flag. If set to true, the subscriber can longer use the Bitdefender application covered by the product bundle.",
						"example": true
					},
					"last_updated": {
						"description": "The millisecond timestamp of the last change of the subscription",
						"allOf": [
							{
								"$ref": "#/components/schemas/Timestamp"
							}
						]
					},
					"created": {
						"description": "The millisecond timestamp when the subscription was created",
						"allOf": [
							{
								"$ref": "#/components/schemas/Timestamp"
							}
						]
					},
					"trial": {
						"description": "Boolean flag present when the subscription is created as a trial",
						"type": "boolean"
					},
					"expiry_date": {
						"description": "The millisecond timestamp denoting the moment in time when the trial expires. Please note that this information is available only after the trial is activated for the subscriber (e.g. for subscribers that are pending the trial is activated when the subscriber is activated).",
						"allOf": [
							{
								"$ref": "#/components/schemas/Timestamp"
							}
						]
					},
					"external_subscription_id": {
						"type": "string",
						"description": "ID used to identify external subscriptions. The ID does not need to be unique.",
						"example": "11faa3d9236940fdaf4a35c1c8403a58",
						"minLength": 3,
						"maxLength": 500
					},
					"reservation_id": {
						"type": "string",
						"description": "ID used to identify external subscriptions. The ID does not need to be unique.",
						"example": "11faa3d9236940fdaf4a35c1c8403a58",
						"minLength": 3,
						"maxLength": 200
					}
				}
			},
			"Subscriber": {
				"type": "object",
				"properties": {
					"subscriber_id": {
						"description": "The MSP identifier of the subscriber",
						"example": "c2de29df-ceaa-4b1c-a205-521adc34fc02",
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							}
						]
					},
					"email": {
						"description": "The email of the subscriber",
						"type": "string",
						"format": "email",
						"example": "subscriber@email.com"
					},
					"phone": {
						"description": "The phone number of the subscriber",
						"type": "string",
						"example": ""
					},
					"username": {
						"description": "The username of the subscriber",
						"type": "string",
						"example": ""
					},
					"external_subscriber_id": {
						"description": "Additional subscriber identification capability",
						"type": "string",
						"example": "8873361f792344c0ab1d2baec0e309c30adc867c6cd5"
					},
					"lang": {
						"$ref": "#/components/schemas/Lang"
					},
					"state": {
						"description": "The state of the subscriber. Possible values:\n* `active` - the subscriber has logged in at least once in his Bitdefender account\n* `pending` - the subscriber and its subscriptions (if any) are provisioned and waiting for the subscriber to login in its Bitdefender account\n",
						"type": "string",
						"enum": [
							"pending",
							"active"
						],
						"example": "active"
					},
					"created": {
						"description": "The millisecond timestamp when the subscriber was created",
						"allOf": [
							{
								"$ref": "#/components/schemas/Timestamp"
							}
						]
					},
					"subscriptions": {
						"description": "The list of subscription owned by the subscriber",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Subscription"
						}
					},
					"enrol_url": {
						"description": "The enrollment link where the subscriber can complete the enrollment process. The enrollment url has a limited validity and if it expires it has to be generated again (current validity time is 10 days). Not present if the user state is active",
						"type": "object",
						"properties": {
							"value": {
								"description": "The enrolment URL",
								"type": "string",
								"example": "http://beta-login.bitdefender.com/central/msp/setPassword.html?user_token=334c8d3efdc10da6e22d2af9b64fa0044bde611d&lang=en_US&redirect_url=https%3A%2F%2Fbeta_backend.central-test.bitdefender.biz%2F&user=subscriber%40email.com"
							},
							"created": {
								"description": "The millisecond timestamp when the URL was created",
								"allOf": [
									{
										"$ref": "#/components/schemas/Timestamp"
									}
								]
							}
						}
					}
				},
				"example": {
					"subscriber_id": "c2de29df-ceaa-4b1c-a205-521adc34fc02",
					"email": "user@email.com",
					"phone": "",
					"username": "",
					"external_subscriber_id": "8873361f792344c0ab1d2baec0e309c30adc867c6cd5",
					"lang": "en_US",
					"state": "pending",
					"created": 1574420320000,
					"subscriptions": [
						{
							"product_id": "tsmd-10d",
							"suspended": false,
							"last_updated": 1574420320000,
							"created": 1574420320000
						}
					],
					"enrol_url": {
						"value": "http://beta.login.bitdefender.com/central/msp/setPassword.html?user_token=334c8d3efdc10da6e22d2af9b64fa0044bde611d&lang=en_US&redirect_url=https%3A%2F%2Fbeta_backend.central-test.bitdefender.biz%2F&user=subscriber%40email.com",
						"created": 1574420320000
					}
				}
			},
			"SubscriberStatistics": {
				"description": "Statistics of type `subscriber` offer information about number of subscribers.",
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"date": {
							"description": "Human readable date of the report",
							"type": "string",
							"format": "date"
						},
						"active": {
							"description": "Number of active subscribers",
							"type": "number"
						},
						"pending": {
							"description": "Number of subscribers who have not confirmed their account",
							"type": "number"
						}
					}
				}
			},
			"ProductsStatistics": {
				"description": "Statistics of type `products` return the usage count for every product, for each day.",
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"date": {
							"description": "Date of report",
							"type": "string",
							"format": "date"
						},
						"product_name": {
							"description": "How many subscribers had product with ID _product_name_ at the day of the report",
							"type": "number"
						}
					}
				}
			},
			"ThreatCountWeeklyStatistics": {
				"description": "Statistics of type `threat_count_weekly` contain weekly reports, broken down by threat_type",
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"date": {
							"description": "The string representation of the period in which the report is computed in the format YYYY-WW",
							"type": "string",
							"format": "date"
						},
						"from_date": {
							"description": "The string representation of the beginning of the report period in the format YYYY-MM-DD",
							"type": "string",
							"format": "date"
						},
						"to_date": {
							"description": "The string representation of the ending of the report period in the format YYYY-MM-DD",
							"type": "string",
							"format": "date"
						},
						"threat_type": {
							"description": "Array of mappings of the string threat_type with the number of occurrences of threats having the threat_type set to <threat_type> in the report period",
							"type": "string",
							"enum": [
								"malware phishing fraud pua ransomware untrusted exploit attack privacy anomaly bot spam certificate miner malicious_host"
							]
						}
					}
				}
			},
			"ThreatCountMonthlyStatistics": {
				"description": "Statistics of type `threat_count_monthly` contain monthly reports, broken down by threat_type",
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"date": {
							"description": "The string representation of the period in which the report is computed in the format YYYY-MM",
							"type": "string",
							"format": "date"
						},
						"from_date": {
							"description": "The string representation of the beginning of the report period in the format YYYY-MM-DD",
							"type": "string",
							"format": "date"
						},
						"to_date": {
							"description": "The string representation of the ending of the report period in the format YYYY-MM-DD",
							"type": "string",
							"format": "date"
						},
						"threat_type": {
							"description": "Array of mappings of the string threat_type with the number of occurrences of threats having the threat_type set to <threat_type> in the report period",
							"type": "string",
							"enum": [
								"malware phishing fraud pua ransomware untrusted exploit attack privacy anomaly bot spam certificate miner malicious_host"
							]
						}
					}
				}
			},
			"ThreatRankingStatistics": {
				"description": "Statistics of type `threat_ranking` contain ranking reports, broken down by threat name",
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"date": {
							"description": "The string representation of the period in which the report is computed in the format YYYY-WW",
							"type": "string",
							"format": "date"
						},
						"from_date": {
							"description": "The string representation of the beginning of the report period in the format YYYY-MM-DD",
							"type": "string",
							"format": "date"
						},
						"to_date": {
							"description": "The string representation of the ending of the report period in the format YYYY-MM-DD",
							"type": "string",
							"format": "date"
						},
						"threats": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"threat": {
										"description": "Name of occurred threat",
										"type": "string"
									},
									"occurrences": {
										"description": "Number of occurrences of said threat",
										"type": "number"
									}
								}
							}
						}
					}
				}
			},
			"UserAgent": {
				"type": "string",
				"example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0"
			},
			"ActivityLog": {
				"type": "object",
				"description": "An activity log is proof that an action was done by a business user or by an API key, at a certain moment in time. The activity logs should help the business users that manage an organization to discover at which point in time a change was made.",
				"properties": {
					"timestamp": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Timestamp"
							},
							{
								"description": "The time of the request"
							}
						]
					},
					"access_type": {
						"type": "string",
						"enum": [
							"user",
							"apikey"
						],
						"description": "The type of authentication used to make the request:\n  * `apikey` - the request was authenticated with an API key.\n  * `user` - the request was authenticated with a business user access token\n",
						"example": "apikey"
					},
					"identifier": {
						"type": "string",
						"description": "The identifier of the authentication method: the API key or business user identifier\n",
						"example": "cf4ea7dc-a7df-449c-820a-bc638d4d9f88"
					},
					"resource": {
						"type": "string",
						"description": "The API path that was used to make the request",
						"example": "v1/businessUsers"
					},
					"method": {
						"type": "string",
						"enum": [
							"POST",
							"PATCH",
							"DELETE"
						],
						"description": "The HTTP method used to make the request:\n  * `POST` - create action\n  * `PATCH` - update action\n  * `DELETE` - delete action\nThe `GET` requests do not have activity logs associated.\n",
						"example": "POST"
					},
					"params": {
						"type": "object",
						"description": "The parameters (query, path, body) that were used to make the request",
						"example": {
							"email": "user@bitdefender.com"
						}
					},
					"result": {
						"type": "object",
						"description": "The result of the request",
						"example": {
							"user_id": "19330632-b442-4042-9cf9-930e30703196"
						}
					},
					"ip": {
						"type": "string",
						"description": "The remote IP address of the client that made the request.",
						"example": "127.0.0.1"
					},
					"user_agent": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UserAgent"
							},
							{
								"description": "The `user-agent` used to make the request"
							}
						]
					}
				}
			},
			"AccessLog": {
				"type": "object",
				"description": "An access logs specifies when a business user logged in the MSP platform. Keep in mind that the access logs do not represent the list of active sessions of a business user.",
				"properties": {
					"timestamp": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Timestamp"
							},
							{
								"description": "The time of login"
							}
						]
					},
					"user_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							},
							{
								"description": "The ID of the business user",
								"example": "6f159af9-b26e-490d-9900-962feb850094"
							}
						]
					},
					"ip": {
						"type": "string",
						"description": "The remote IP address from which the login was made.",
						"example": "127.0.0.1"
					},
					"user_agent": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UserAgent"
							},
							{
								"description": "The `user-agent` of the browser used to login"
							}
						]
					}
				}
			},
			"BusinessUser": {
				"type": "object",
				"properties": {
					"user_id": {
						"type": "string",
						"example": "8bac58c7-26a7-4b8b-a733-0e39df7b96a6"
					},
					"organization_id": {
						"type": "string",
						"example": "dd2f6b72-9920-ab91-110c-242d7040176e"
					},
					"email": {
						"type": "string",
						"example": "businessUser1@bitdefender.com"
					},
					"roles": {
						"type": "string",
						"items": {
							"type": "string"
						},
						"example": [
							"admin",
							"integration_manager",
							"reseller_admin",
							"subscriber_manager",
							"auditor"
						]
					},
					"state": {
						"type": "string",
						"enum": [
							"active",
							"pending"
						],
						"example": "active"
					}
				}
			},
			"QueryHash": {
				"description": "String that uniquely identifies the query. Can be used to execute batch operations on the subscribers match by the query (see Tasks).",
				"type": "string",
				"example": "0ae8040a5837d02083fe1b3501a3e306dde9fc9b3c06b161414685bb468e9581"
			},
			"QueryCount": {
				"type": "number",
				"description": "The total number of elements matched by the filters",
				"example": 1
			},
			"UsageReportTaskParams": {
				"type": "object",
				"properties": {
					"year": {
						"description": "The year for which the usage report is compute. Defaults to the current year",
						"type": "number",
						"minimum": 2019
					},
					"month": {
						"description": "The month for which the report is computed",
						"type": "number",
						"minimum": 1,
						"maximum": 12
					},
					"organization_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							},
							{
								"description": "The ID of the organization for which the report is generated.",
								"example": "678e829d-0ede-4226-b5a4-5a18a7598577"
							}
						]
					}
				},
				"required": [
					"month",
					"organization_id"
				]
			},
			"SubscriptionTaskParams": {
				"type": "object",
				"properties": {
					"query": {
						"description": "Subscriber filter. Only the subscribers matched by the filter will be affected by the task changes. A subscription that has `reservation_id` already set can be replaced only by a product that allows reservations.",
						"oneOf": [
							{
								"$ref": "#/components/schemas/QueryHash"
							},
							{
								"type": "object",
								"description": "List of subscriber identifiers to execute the task on",
								"properties": {
									"field_name": {
										"description": "The name of the field to search for",
										"type": "string",
										"enum": [
											"external_subscriber_id",
											"subscriber_id"
										]
									},
									"ids": {
										"description": "The list of values to search for",
										"type": "array",
										"uniqueItems": true,
										"maxItems": 300,
										"items": {
											"type": "string"
										}
									}
								}
							}
						]
					}
				}
			},
			"BatchEnrolTaskParams": {
				"type": "object",
				"properties": {
					"file_id": {
						"description": "The ID of the file in the MSP storage. This task supports two file formats: _json_ and _csv_. \n\nThe file should contain the information needed the enrol each subscriber, i.e. one of the following combination of fields:\n\n* `email` and, optionally, `external_subscriber_id`;\n* `username` and, optionally, `external_subscriber_id`;\n* `phone` and, optionally, `external_subscriber_id`;\n* `external_subscriber_id`, for organizations that are using Bitdefender login services and have the Download Links feature `enabled`, the `email` is required.\n\nAdditionally to the above combinations, the following optional parameter can be provided:\n* `lang` - sets the subscriber's language to another value than organization's default language;\n* `product_id` - adds to the subscriber a subscription using the specified product.\n\nCSV file example:\n```csv\nemail,external_subscriber_id,lang,product_id\nuser-1@bitdefender.com,p7rMF9tqwoW8yrkCNME1,,,\n,5En8IGApZeZtE3xPKTxb,,,\nuser-2@bitdefender.com,,fr_CA,bitdefender-av-10device\n```\nJSON file example:\n```json\n[{\n  \"email\": \"user-1@bitdefender.com\",\n  \"external_subscriber_id\": \"p7rMF9tqwoW8yrkCNME1\"\n}, {\n  \"external_subscriber_id\": \"5En8IGApZeZtE3xPKTxb\"\n}, {\n  \"email\": \"user-2@bitdefender.com\",\n  \"lang\": \"fr_CA\",\n  \"product_id\": \"bitdefender-av-10device\"\n}]\n```\n",
						"type": "string"
					},
					"extension": {
						"type": "string",
						"enum": [
							"json",
							"csv"
						]
					}
				}
			},
			"Task": {
				"type": "object",
				"properties": {
					"task_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MspEntityId"
							},
							{
								"description": "The ID of the task",
								"example": "52945a68-41aa-4620-8c04-e746af5845a4"
							}
						]
					},
					"task_name": {
						"type": "string",
						"description": "The name of the task. The task available are the following:\n  * `add-subscription` - add to a list of subscribers a product. A subscriber can have maximum 7 subscription and 100 cumulated slots.\n  * `remove-subscription` - remove all subscriptions with specified product product from a list of subscribers. The subscriber that do not have the product are not changed.\n  * `suspend-subscription` - suspend all subscriptions with specified product for a list of subscribers. The subscriber that do not own the product are not changed.\n  * `resume-subscription` - resume all subscriptions with specified product for a list of subscribers. The subscriber that do not own the product are not changed.\n  * `usage-report` - generate an usage report for a managed organization or the current organization in a period of time.\n  * `batch-enrolment` - enrol subscribers using a single file containing all enroll data.\n  * `replace-product` - replace a product for a list of subscribers.\n  * `device-export` - generate a report containing an organization's devices with all details available for each device.\n  * `remove-subscribers` - remove all subscribers that matches the given query\n",
						"enum": [
							"add-subscription",
							"remove-subscription",
							"suspend-subscription",
							"resume-subscription",
							"usage-report",
							"batch-enrolment",
							"replace-product",
							"device-export",
							"remove-subscribers"
						],
						"example": "usage-report"
					},
					"task_params": {
						"description": "The parameters used to run the task. Additionally to the arguments provided to the create task API, additional organization information, specific to each task, will be appended to the `task_params`.",
						"oneOf": [
							{
								"allOf": [
									{
										"description": "Parameters for `*-subscription` tasks"
									},
									{
										"$ref": "#/components/schemas/SubscriptionTaskParams"
									},
									{
										"properties": {
											"product_id": {
												"$ref": "#/components/schemas/ProductId"
											},
											"oem_label": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Organization/properties/oem_label"
													}
												]
											},
											"commercial_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/BitdefenderInternalId"
													},
													{
														"example": "a4b5b381-3b21-4e5b-a2b0-ff387fc86986"
													}
												]
											},
											"ax_code": {
												"allOf": [
													{
														"$ref": "#/components/schemas/BitdefenderInternalId"
													},
													{
														"example": "AR_00556"
													}
												]
											},
											"share_link_enabled": {
												"type": "boolean",
												"description": "flag that specifies whether the organization has the share_link feature enabled",
												"example": true
											},
											"datacenter_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/DatacenterId"
													},
													{
														"example": "gcp-fra"
													}
												]
											}
										},
										"required": [
											"product_id"
										]
									}
								]
							},
							{
								"allOf": [
									{
										"description": "Parameters for `replace-product` tasks"
									},
									{
										"$ref": "#/components/schemas/SubscriptionTaskParams"
									},
									{
										"properties": {
											"old_product_id": {
												"$ref": "#/components/schemas/ProductId"
											},
											"new_product_id": {
												"$ref": "#/components/schemas/ProductId"
											},
											"oem_label": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Organization/properties/oem_label"
													}
												]
											},
											"commercial_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/BitdefenderInternalId"
													},
													{
														"example": "a4b5b381-3b21-4e5b-a2b0-ff387fc86986"
													}
												]
											},
											"ax_code": {
												"allOf": [
													{
														"$ref": "#/components/schemas/BitdefenderInternalId"
													},
													{
														"example": "AR_00556"
													}
												]
											},
											"share_link_enabled": {
												"type": "boolean",
												"description": "flag that specifies whether the organization has the share_link feature enabled",
												"example": true
											},
											"datacenter_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/DatacenterId"
													},
													{
														"example": "gcp-fra"
													}
												]
											}
										},
										"required": [
											"old_product_id",
											"new_product_id"
										]
									}
								]
							},
							{
								"allOf": [
									{
										"$ref": "#/components/schemas/UsageReportTaskParams"
									},
									{
										"description": "Parameters for the `usage-report` tasks"
									},
									{
										"properties": {
											"organization_label": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Organization/properties/organization_label"
													}
												]
											},
											"from_date": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Timestamp"
													},
													{
														"description": "The millisecond timestamp of the beginning of the report interval"
													}
												]
											},
											"to_date": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Timestamp"
													},
													{
														"description": "The millisecond timestamp of the beginning of the report interval"
													}
												]
											}
										}
									}
								]
							},
							{
								"allOf": [
									{
										"description": "Parameters for the `batch-enrolment` tasks"
									},
									{
										"$ref": "#/components/schemas/BatchEnrolTaskParams"
									},
									{
										"properties": {
											"organization_type": {
												"$ref": "#/components/schemas/OrganizationType"
											},
											"send_email": {
												"allOf": [
													{
														"$ref": "#/components/schemas/BitdefenderLogin/properties/send_email"
													}
												]
											},
											"oem_label": {
												"allOf": [
													{
														"$ref": "#/components/schemas/Organization/properties/oem_label"
													}
												]
											},
											"commercial_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/BitdefenderInternalId"
													},
													{
														"example": "a4b5b381-3b21-4e5b-a2b0-ff387fc86986"
													}
												]
											},
											"ax_code": {
												"allOf": [
													{
														"$ref": "#/components/schemas/BitdefenderInternalId"
													},
													{
														"example": "AR_00556"
													}
												]
											},
											"share_link_enabled": {
												"type": "boolean",
												"description": "flag that specifies whether the organization has the share_link feature enabled",
												"example": true
											},
											"otp_login": {
												"type": "boolean",
												"description": "flag that specifies whether the organization has the otp login",
												"example": true
											},
											"datacenter_id": {
												"allOf": [
													{
														"$ref": "#/components/schemas/DatacenterId"
													},
													{
														"example": "gcp-fra"
													}
												]
											}
										}
									}
								]
							}
						],
						"example": {
							"organization_id": "ae89aece-860f-443c-890b-354de554cf9f",
							"year": 2019,
							"month": 6
						}
					},
					"changes": {
						"type": "number",
						"description": "The number of changes/operations to be done until to complete the task. When the task is completed, this value will be equal with the sum of `succeeded` and `failed`",
						"example": 5
					},
					"succeeded": {
						"type": "number",
						"description": "The number of operation succeeded during task execution",
						"example": 5
					},
					"failed": {
						"type": "number",
						"description": "The number of operations failed during task execution",
						"example": 0
					},
					"status": {
						"type": "string",
						"description": "The status of the task. The possible values are:\n  * `pending` - the task is created and waiting for other tasks to complete before its execution\n  * `running` - the task is running\n  * `canceled` - the task was canceled by the action of a business user\n  * `completed` - the task was completed. a task with all operations failed will also have this status\n  * `preprocess_fail` - the task failed during operation generation/identification\n  * `idle` - the task was blocked in running more than 24h and its execution is stopped\n",
						"enum": [
							"completed",
							"pending",
							"running",
							"canceled",
							"preprocess_fail",
							"idle"
						]
					},
					"result": {
						"type": "object",
						"description": "The result of the task. This property is specific only to the following tasks:  `usage-report`, `batch-enrolment` and `device-export`.\n",
						"oneOf": [
							{
								"description": "Result of the `usage-report` tasks",
								"properties": {
									"report_file_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/MspEntityId"
											},
											{
												"description": "The ID of the report file, according to MSP file storage, that contains the report",
												"example": "b3723d57-1998-4bb4-8f22-842dcdbcbe7f"
											}
										]
									},
									"log_file_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/MspEntityId"
											},
											{
												"description": "The ID of the event log file, according to MSP file storage, that contains the report. This file contains the usage logs used to compute the report",
												"example": "f1e5abac-0c07-4e3d-a334-2062592e11e1"
											}
										]
									}
								},
								"example": {
									"log_file_id": "f1e5abac-0c07-4e3d-a334-2062592e11e1",
									"report_file_id": "b3723d57-1998-4bb4-8f22-842dcdbcbe7f"
								}
							},
							{
								"description": "Result of the `batch-enrolment` tasks",
								"properties": {
									"success_file_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/MspEntityId"
											},
											{
												"description": "The ID of file with the successfully enrolled users.",
												"example": "b3723d57-1998-4bb4-8f22-842dcdbcbe7f"
											}
										]
									},
									"failed_file_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/MspEntityId"
											},
											{
												"description": "The ID of file with the unsuccessfully enrolled users and the specific error message.",
												"example": "f1e5abac-0c07-4e3d-a334-2062592e11e1"
											}
										]
									}
								},
								"example": {
									"success_file_id": "f1e5abac-0c07-4e3d-a334-2062592e11e1",
									"failed_file_id": "b3723d57-1998-4bb4-8f22-842dcdbcbe7f"
								}
							},
							{
								"description": "Result of the `device-export` tasks",
								"properties": {
									"file_id": {
										"allOf": [
											{
												"$ref": "#/components/schemas/MspEntityId"
											},
											{
												"description": "The ID of file with organization's devices with all details available for each device",
												"example": "b3723d57-1998-4bb4-8f22-842dcdbcbe7f"
											}
										]
									}
								},
								"example": {
									"file_id": "b3723d57-1998-4bb4-8f22-842dcdbcbe7f"
								}
							}
						]
					},
					"created": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Timestamp"
							},
							{
								"description": "The millisecond timestamp when the task was created"
							}
						]
					},
					"last_updated": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Timestamp"
							},
							{
								"description": "The millisecond timestamp of the last update of the task"
							}
						]
					}
				}
			},
			"Product": {
				"description": "A bundle of subscription that can be assigned to a subscriber or to a child organization to resell it",
				"type": "object",
				"properties": {
					"product_label": {
						"description": "Human readable name of the product",
						"type": "string",
						"example": "Bitdefender Antivirus"
					},
					"product_id": {
						"description": "The product identifier. Is unique for each product",
						"type": "string",
						"example": "bitdefender-av-10devices"
					},
					"validity": {
						"description": "The period of validity for the product, expressed in seconds. If the product assignees subscriptions on/off (active until is explicitly removed) the this field will hold the value -1.",
						"type": "number",
						"example": -1
					},
					"allow_reservation": {
						"description": "Boolean flag that specifies if the subscription applied by the product have support for slot reservation",
						"type": "boolean",
						"example": false
					},
					"devices": {
						"description": "The number of devices included in the subscription bundle",
						"type": "number",
						"example": 10
					},
					"suspended": {
						"description": "Suspend boolean flag. If set to true, the product cannot be assigned to subscribers or child organization. Also, when the product is suspended for an organization, each child organization will also have the product suspended",
						"type": "boolean",
						"example": false
					},
					"suspend_reason": {
						"description": "String representation of the suspended reason. Possible value:\n\n* `parent_action` - The product is suspended due to a parent organization action\n* `inherited` - The product is suspended because is was suspended to an ancestor organization (organization placed above the current organization in the organization tree).\n*  `\"\"` (empty string) - the product is not suspended\n",
						"type": "string",
						"enum": [
							"",
							"inherited",
							"parent_action"
						]
					},
					"oem_labels": {
						"description": "List of supported OEM labels for the product",
						"type": "array",
						"items": {
							"type": "string"
						},
						"example": [
							"com.bitdefender",
							"com.softastic"
						]
					}
				}
			},
			"Changelog": {
				"type": "object",
				"properties": {
					"changelog_id": {
						"type": "string",
						"description": "The identifier of the changelog",
						"example": "4bd48afa-b460-11e9-ba12-e7be67168c58"
					},
					"api_version": {
						"type": "string",
						"description": "The version of the MSP API that exists in the database",
						"example": "1.0.3"
					},
					"ui_version": {
						"type": "string",
						"description": "The version of the MSP UI that exists in the database",
						"example": "1.0.3"
					},
					"tags": {
						"type": "string",
						"description": "Indicates the application",
						"example": [
							"msp-api",
							"msp-ui"
						]
					},
					"title": {
						"type": "string",
						"description": "The log's name",
						"example": "Added support for multiple products of the same type"
					},
					"info": {
						"type": "array",
						"items": {
							"type": "string",
							"description": "Additional information about the log"
						},
						"example": [
							"A subscriber can now have several subscriptions of the same product. i.e. one can have   2 subscriptions of Bitdefender Internet Security (one for 1 device and one for 2 devices) on the account.",
							"Please note that there is a limit of 7 subscriptions and a maximum of 100 devices on an account (no matter the bundles on that account)."
						]
					},
					"release_date": {
						"type": "number",
						"description": "Millisecond timestamp of release date",
						"example": 1649078343166
					}
				}
			}
		},
		"securitySchemes": {
			"ApiKey": {
				"type": "apiKey",
				"in": "header",
				"name": "Authorization",
				"description": "Fill in with **ApiKey** <api_key>\n\nAn API Key can be generated from Access Control / API Keys. This will include an **Authorization** header in your requests with your input value.\n"
			},
			"BearerToken": {
				"type": "http",
				"scheme": "bearer",
				"description": "Fill in with your bearer token.\n\nYour Bearer token can be obtained by tracing an HTTP request in your browser. This will include an **Authorization** header in your requests with your input value.\n"
			},
			"X-Organization-Id": {
				"type": "apiKey",
				"in": "header",
				"name": "X-Organization-Id",
				"description": "Fill in with the ID of the organization which will be change target of your request  (e.g. if your business user is managing the organizations V and W, and the request should be done for W, add the ID of W in the input field below). \\\nThis header is **mandatory** for **Bearer authentication** when the business user is managing **more than one** organization!\n"
			}
		},
		"headers": {
			"Client-ID-RateLimit-Limit": {
				"description": "Number of maximum requests user can make per time window using a token with client_credentials grant",
				"schema": {
					"type": "number",
					"example": 260
				}
			},
			"Client-ID-RateLimit-Remaining": {
				"description": "Number of requests user can make in the remaining time window using a token with client_credentials grant",
				"schema": {
					"type": "number",
					"example": 125
				}
			},
			"Client-ID-RateLimit-Reset": {
				"description": "Seconds til current time window will expire and remaining requests will be reset",
				"schema": {
					"type": "number",
					"example": 580
				}
			},
			"ApiKey-RateLimit-Limit": {
				"description": "Number of maximum requests user can make per time window using an ApiKey",
				"schema": {
					"type": "number",
					"example": 260
				}
			},
			"ApiKey-RateLimit-Remaining": {
				"description": "Number of requests user can make in the remaining time window using an ApiKey",
				"schema": {
					"type": "number",
					"example": 125
				}
			},
			"ApiKey-RateLimit-Reset": {
				"description": "Seconds til current time window will expire and remaining requests will be reset",
				"schema": {
					"type": "number",
					"example": 580
				}
			},
			"Organization-RateLimit-Limit": {
				"description": "Number of maximum requests can be made for a specific organization",
				"schema": {
					"type": "number",
					"example": 5000
				}
			},
			"Organization-RateLimit-Remaining": {
				"description": "Number of remaining requests can be made for a specific organization",
				"schema": {
					"type": "number",
					"example": 4520
				}
			},
			"Organization-RateLimit-Reset": {
				"description": "Seconds til current time window will expire and remaining requests will be reset",
				"schema": {
					"type": "number",
					"example": 86380
				}
			}
		}
	},
	"security": [
		{
			"ApiKey": []
		},
		{
			"BearerToken": [],
			"X-Organization-Id": []
		}
	]
}